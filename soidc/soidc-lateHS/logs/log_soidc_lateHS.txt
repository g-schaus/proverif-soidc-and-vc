File "soidc_lateHS.pv", line 215, characters 9-12:
Warning: identifier sskI rebound.
Process 0 (that is, the initial process):
{1}new a: bitstring;
{2}new u: bitstring;
{3}new i: bitstring;
{4}out(c, a);
{5}out(c, u);
{6}out(c, i);
{7}new ska: SecretKey;
{8}new sku: SecretKey;
{9}new ski: SecretKey;
{10}out(c, pk(ska));
{11}out(c, pk(sku));
{12}out(c, pk(ski));
{13}new password: bitstring;
(
    {14}!
    {15}let c_1: channel = c in
    {16}let a_1: bitstring = a in
    {17}let ska_1: SecretKey = ska in
    {18}let u_1: bitstring = u in
    {19}let pku: PublicKey = pk(sku) in
    {20}let i_1: bitstring = i in
    {21}let pki: PublicKey = pk(ski) in
    {22}in(c_1, e1: bitstring);
    {23}in(c_1, e2: bitstring);
    {24}if ((e1 = u_1) && (e2 = i_1)) then
    (
        {25}let talksOnlyToHonest: bool = true in
        {26}new pkce: bitstring;
        {27}new scope: bitstring;
        {28}let m_1: bitstring = (tag1,a_1,hash(pkce),scope) in
        {29}out(c_1, m_1);
        {30}in(c_1, m_6: bitstring);
        {31}let (tag6': bitstring,n: bitstring,spkI: PublicKey) = adec(m_6,ska_1) in
        {32}if (tag6 = tag6') then
        {33}new k1: SymmetricKey;
        {34}let m_7: bitstring = aenc((tag7,n,k1),spkI) in
        {35}event appSendsLastMessageToBrowser(m_6,m_7);
        {36}out(c_1, m_7);
        {37}in(c_1, m_8: bitstring);
        {38}let (tag8': bitstring,code: bitstring) = dec(m_8,k1) in
        {39}if (tag8 = tag8') then
        {40}new n2: bitstring;
        {41}new sskI2: SecretKey;
        {42}let m_9: bitstring = aenc((tag9,n2,pk(sskI2)),pki) in
        {43}out(c_1, m_9);
        {44}in(c_1, m_10: bitstring);
        {45}let (tag10': bitstring,n2': bitstring,k3: SymmetricKey) = adec(m_10,sskI2) in
        {46}if (tag10 = tag10') then
        {47}if (n2 = n2') then
        {48}new sks: SecretKey;
        {49}new jti: bitstring;
        {50}let T2: bitstring = (a_1,jti,code,pkce) in
        {51}let m_11: bitstring = enc((tag11,pk(sks),sign(T2,sks)),k3) in
        {52}event appSendsLastMessageToIssuer(m_9,m_10,m_11);
        {53}out(c_1, m_11);
        {54}in(c_1, m_12: bitstring);
        {55}let (tag12': bitstring,signed_M: bitstring) = dec(m_12,k3) in
        {56}if (tag12 = tag12') then
        {57}let M: bitstring = check(signed_M,pki) in
        {58}let (jtk: bitstring,jti': bitstring,scope': bitstring,a': bitstring,i': bitstring,u': bitstring) = M in
        {59}if (jtk = hash_pk(pk(sks))) then
        {60}if (jti = jti') then
        {61}if (scope = scope') then
        {62}if (a_1 = a') then
        {63}if (i_1 = i') then
        {64}if (u_1 = u') then
        {65}if talksOnlyToHonest then
        {66}out(c_1, check_reach_app);
        {67}event appCompletesProtocol(m_6,m_7,m_8,m_9,m_10,m_11,m_12);
        {68}out(ch(code), free_code)
    )
    else
        {69}if ((e1 Ôëá u_1) && (e2 = i_1)) then
        (
            {70}in(c_1, pke1: PublicKey);
            {71}let talksOnlyToHonest_1: bool = false in
            {72}new pkce_1: bitstring;
            {73}new scope_1: bitstring;
            {74}let m: bitstring = (tag1,a_1,hash(pkce_1),scope_1) in
            {75}out(c_1, m);
            {76}in(c_1, m_2: bitstring);
            {77}let (tag6'_1: bitstring,n_1: bitstring,spkI_1: PublicKey) = adec(m_2,ska_1) in
            {78}if (tag6 = tag6'_1) then
            {79}new k1_1: SymmetricKey;
            {80}let m_3: bitstring = aenc((tag7,n_1,k1_1),spkI_1) in
            {81}event appSendsLastMessageToBrowser(m_2,m_3);
            {82}out(c_1, m_3);
            {83}in(c_1, m_4: bitstring);
            {84}let (tag8'_1: bitstring,code_1: bitstring) = dec(m_4,k1_1) in
            {85}if (tag8 = tag8'_1) then
            {86}new n2_1: bitstring;
            {87}new sskI2_1: SecretKey;
            {88}let m_5: bitstring = aenc((tag9,n2_1,pk(sskI2_1)),pki) in
            {89}out(c_1, m_5);
            {90}in(c_1, m_13: bitstring);
            {91}let (tag10'_1: bitstring,n2'_1: bitstring,k3_1: SymmetricKey) = adec(m_13,sskI2_1) in
            {92}if (tag10 = tag10'_1) then
            {93}if (n2_1 = n2'_1) then
            {94}new sks_1: SecretKey;
            {95}new jti_1: bitstring;
            {96}let T2_1: bitstring = (a_1,jti_1,code_1,pkce_1) in
            {97}let m_14: bitstring = enc((tag11,pk(sks_1),sign(T2_1,sks_1)),k3_1) in
            {98}event appSendsLastMessageToIssuer(m_5,m_13,m_14);
            {99}out(c_1, m_14);
            {100}in(c_1, m_15: bitstring);
            {101}let (tag12'_1: bitstring,signed_M_1: bitstring) = dec(m_15,k3_1) in
            {102}if (tag12 = tag12'_1) then
            {103}let M_1: bitstring = check(signed_M_1,pki) in
            {104}let (jtk_1: bitstring,jti'_1: bitstring,scope'_1: bitstring,a'_1: bitstring,i'_1: bitstring,u'_1: bitstring) = M_1 in
            {105}if (jtk_1 = hash_pk(pk(sks_1))) then
            {106}if (jti_1 = jti'_1) then
            {107}if (scope_1 = scope'_1) then
            {108}if (a_1 = a'_1) then
            {109}if (i_1 = i'_1) then
            {110}if (e1 = u'_1) then
            {111}if talksOnlyToHonest_1 then
            {112}out(c_1, check_reach_app);
            {113}event appCompletesProtocol(m_2,m_3,m_4,m_5,m_13,m_14,m_15);
            {114}out(ch(code_1), free_code)
        )
        else
            {115}if ((e1 = u_1) && (e2 Ôëá i_1)) then
            (
                {116}in(c_1, pke2: PublicKey);
                {117}let talksOnlyToHonest_2: bool = false in
                {118}new pkce_2: bitstring;
                {119}new scope_2: bitstring;
                {120}let m_16: bitstring = (tag1,a_1,hash(pkce_2),scope_2) in
                {121}out(c_1, m_16);
                {122}in(c_1, m_17: bitstring);
                {123}let (tag6'_2: bitstring,n_2: bitstring,spkI_2: PublicKey) = adec(m_17,ska_1) in
                {124}if (tag6 = tag6'_2) then
                {125}new k1_2: SymmetricKey;
                {126}let m_18: bitstring = aenc((tag7,n_2,k1_2),spkI_2) in
                {127}event appSendsLastMessageToBrowser(m_17,m_18);
                {128}out(c_1, m_18);
                {129}in(c_1, m_19: bitstring);
                {130}let (tag8'_2: bitstring,code_2: bitstring) = dec(m_19,k1_2) in
                {131}if (tag8 = tag8'_2) then
                {132}new n2_2: bitstring;
                {133}new sskI2_2: SecretKey;
                {134}let m_20: bitstring = aenc((tag9,n2_2,pk(sskI2_2)),pke2) in
                {135}out(c_1, m_20);
                {136}in(c_1, m_21: bitstring);
                {137}let (tag10'_2: bitstring,n2'_2: bitstring,k3_2: SymmetricKey) = adec(m_21,sskI2_2) in
                {138}if (tag10 = tag10'_2) then
                {139}if (n2_2 = n2'_2) then
                {140}new sks_2: SecretKey;
                {141}new jti_2: bitstring;
                {142}let T2_2: bitstring = (a_1,jti_2,code_2,pkce_2) in
                {143}let m_22: bitstring = enc((tag11,pk(sks_2),sign(T2_2,sks_2)),k3_2) in
                {144}event appSendsLastMessageToIssuer(m_20,m_21,m_22);
                {145}out(c_1, m_22);
                {146}in(c_1, m_23: bitstring);
                {147}let (tag12'_2: bitstring,signed_M_2: bitstring) = dec(m_23,k3_2) in
                {148}if (tag12 = tag12'_2) then
                {149}let M_2: bitstring = check(signed_M_2,pke2) in
                {150}let (jtk_2: bitstring,jti'_2: bitstring,scope'_2: bitstring,a'_2: bitstring,i'_2: bitstring,u'_2: bitstring) = M_2 in
                {151}if (jtk_2 = hash_pk(pk(sks_2))) then
                {152}if (jti_2 = jti'_2) then
                {153}if (scope_2 = scope'_2) then
                {154}if (a_1 = a'_2) then
                {155}if (e2 = i'_2) then
                {156}if (u_1 = u'_2) then
                {157}if talksOnlyToHonest_2 then
                {158}out(c_1, check_reach_app);
                {159}event appCompletesProtocol(m_17,m_18,m_19,m_20,m_21,m_22,m_23);
                {160}out(ch(code_2), free_code)
            )
            else
                {161}if ((e1 Ôëá u_1) && (e2 Ôëá i_1)) then
                {162}in(c_1, pke1_1: PublicKey);
                {163}in(c_1, pke2_1: PublicKey);
                {164}let talksOnlyToHonest_3: bool = false in
                {165}new pkce_3: bitstring;
                {166}new scope_3: bitstring;
                {167}let m_24: bitstring = (tag1,a_1,hash(pkce_3),scope_3) in
                {168}out(c_1, m_24);
                {169}in(c_1, m_25: bitstring);
                {170}let (tag6'_3: bitstring,n_3: bitstring,spkI_3: PublicKey) = adec(m_25,ska_1) in
                {171}if (tag6 = tag6'_3) then
                {172}new k1_3: SymmetricKey;
                {173}let m_26: bitstring = aenc((tag7,n_3,k1_3),spkI_3) in
                {174}event appSendsLastMessageToBrowser(m_25,m_26);
                {175}out(c_1, m_26);
                {176}in(c_1, m_27: bitstring);
                {177}let (tag8'_3: bitstring,code_3: bitstring) = dec(m_27,k1_3) in
                {178}if (tag8 = tag8'_3) then
                {179}new n2_3: bitstring;
                {180}new sskI2_3: SecretKey;
                {181}let m_28: bitstring = aenc((tag9,n2_3,pk(sskI2_3)),pke2_1) in
                {182}out(c_1, m_28);
                {183}in(c_1, m_29: bitstring);
                {184}let (tag10'_3: bitstring,n2'_3: bitstring,k3_3: SymmetricKey) = adec(m_29,sskI2_3) in
                {185}if (tag10 = tag10'_3) then
                {186}if (n2_3 = n2'_3) then
                {187}new sks_3: SecretKey;
                {188}new jti_3: bitstring;
                {189}let T2_3: bitstring = (a_1,jti_3,code_3,pkce_3) in
                {190}let m_30: bitstring = enc((tag11,pk(sks_3),sign(T2_3,sks_3)),k3_3) in
                {191}event appSendsLastMessageToIssuer(m_28,m_29,m_30);
                {192}out(c_1, m_30);
                {193}in(c_1, m_31: bitstring);
                {194}let (tag12'_3: bitstring,signed_M_3: bitstring) = dec(m_31,k3_3) in
                {195}if (tag12 = tag12'_3) then
                {196}let M_3: bitstring = check(signed_M_3,pke2_1) in
                {197}let (jtk_3: bitstring,jti'_3: bitstring,scope'_3: bitstring,a'_3: bitstring,i'_3: bitstring,u'_3: bitstring) = M_3 in
                {198}if (jtk_3 = hash_pk(pk(sks_3))) then
                {199}if (jti_3 = jti'_3) then
                {200}if (scope_3 = scope'_3) then
                {201}if (a_1 = a'_3) then
                {202}if (e2 = i'_3) then
                {203}if (e1 = u'_3) then
                {204}if talksOnlyToHonest_3 then
                {205}out(c_1, check_reach_app);
                {206}event appCompletesProtocol(m_25,m_26,m_27,m_28,m_29,m_30,m_31);
                {207}out(ch(code_3), free_code)
) | (
    {208}!
    {209}let c_2: channel = c in
    {210}let u_2: bitstring = u in
    {211}let sku_1: SecretKey = sku in
    {212}let a_2: bitstring = a in
    {213}let pka: PublicKey = pk(ska) in
    {214}let i_2: bitstring = i in
    {215}let pki_1: PublicKey = pk(ski) in
    {216}let password_1: bitstring = password in
    {217}in(c_2, e1_1: bitstring);
    {218}in(c_2, e2_1: bitstring);
    {219}if ((e1_1 = a_2) && (e2_1 = i_2)) then
    (
        {220}let talksOnlyToHonest_4: bool = true in
        {221}in(c_2, m_32: bitstring);
        {222}let (tag1': bitstring,a'_4: bitstring,h_pkce: bitstring,scope_4: bitstring) = m_32 in
        {223}if (tag1 = tag1') then
        {224}if (a_2 = a'_4) then
        {225}new n2_4: bitstring;
        {226}new sskI: SecretKey;
        {227}let m_33: bitstring = aenc((tag2,n2_4,pk(sskI)),pki_1) in
        {228}out(c_2, m_33);
        {229}in(c_2, m_34: bitstring);
        {230}let (tag3': bitstring,n2'_4: bitstring,k2: SymmetricKey) = adec(m_34,sskI) in
        {231}if (tag3 = tag3') then
        {232}if (n2_4 = n2'_4) then
        {233}let m_35: bitstring = enc((tag4,a_2,scope_4,h_pkce,u_2,password_1),k2) in
        {234}event browserSendsLastMessageToIssuer(m_33,m_34,m_35);
        {235}out(c_2, m_35);
        {236}in(c_2, m_36: bitstring);
        {237}let (tag5': bitstring,code_4: bitstring) = dec(m_36,k2) in
        {238}if (tag5 = tag5') then
        {239}new n_4: bitstring;
        {240}new sskI_1: SecretKey;
        {241}let m_37: bitstring = aenc((tag6,n_4,pk(sskI_1)),pka) in
        {242}out(c_2, m_37);
        {243}in(c_2, m_38: bitstring);
        {244}let (tag7': bitstring,n': bitstring,k1_4: SymmetricKey) = adec(m_38,sskI_1) in
        {245}if (tag7 = tag7') then
        {246}if (n_4 = n') then
        {247}let m_39: bitstring = enc((tag8,code_4),k1_4) in
        {248}event browserSendsLastMessageToApp(m_37,m_38,m_39);
        {249}out(c_2, m_39);
        {250}if talksOnlyToHonest_4 then
        {251}out(c_2, check_reach_browser);
        {252}event browserCompletesProtocol(m_33,m_34,m_35,m_36,m_37,m_38);
        {253}out(ch(code_4), free_code);
        {254}out(ch(password_1), free_password)
    )
    else
        {255}if ((e1_1 Ôëá a_2) && (e2_1 = i_2)) then
        (
            {256}in(c_2, pke1_2: PublicKey);
            {257}let talksOnlyToHonest_5: bool = false in
            {258}in(c_2, m_40: bitstring);
            {259}let (tag1'_1: bitstring,a'_5: bitstring,h_pkce_1: bitstring,scope_5: bitstring) = m_40 in
            {260}if (tag1 = tag1'_1) then
            {261}if (e1_1 = a'_5) then
            {262}new n2_5: bitstring;
            {263}new sskI_2: SecretKey;
            {264}let m_41: bitstring = aenc((tag2,n2_5,pk(sskI_2)),pki_1) in
            {265}out(c_2, m_41);
            {266}in(c_2, m_42: bitstring);
            {267}let (tag3'_1: bitstring,n2'_5: bitstring,k2_1: SymmetricKey) = adec(m_42,sskI_2) in
            {268}if (tag3 = tag3'_1) then
            {269}if (n2_5 = n2'_5) then
            {270}let m_43: bitstring = enc((tag4,e1_1,scope_5,h_pkce_1,u_2,password_1),k2_1) in
            {271}event browserSendsLastMessageToIssuer(m_41,m_42,m_43);
            {272}out(c_2, m_43);
            {273}in(c_2, m_44: bitstring);
            {274}let (tag5'_1: bitstring,code_5: bitstring) = dec(m_44,k2_1) in
            {275}if (tag5 = tag5'_1) then
            {276}new n_5: bitstring;
            {277}new sskI_3: SecretKey;
            {278}let m_45: bitstring = aenc((tag6,n_5,pk(sskI_3)),pke1_2) in
            {279}out(c_2, m_45);
            {280}in(c_2, m_46: bitstring);
            {281}let (tag7'_1: bitstring,n'_1: bitstring,k1_5: SymmetricKey) = adec(m_46,sskI_3) in
            {282}if (tag7 = tag7'_1) then
            {283}if (n_5 = n'_1) then
            {284}let m_47: bitstring = enc((tag8,code_5),k1_5) in
            {285}event browserSendsLastMessageToApp(m_45,m_46,m_47);
            {286}out(c_2, m_47);
            {287}if talksOnlyToHonest_5 then
            {288}out(c_2, check_reach_browser);
            {289}event browserCompletesProtocol(m_41,m_42,m_43,m_44,m_45,m_46);
            {290}out(ch(code_5), free_code);
            {291}out(ch(password_1), free_password)
        )
        else
            {292}if ((e1_1 = a_2) && (e2_1 Ôëá i_2)) then
            (
                {293}in(c_2, pke2_2: PublicKey);
                {294}new wrong_pw: bitstring;
                {295}let talksOnlyToHonest_6: bool = false in
                {296}let password_2: bitstring = wrong_pw in
                {297}in(c_2, m_48: bitstring);
                {298}let (tag1'_2: bitstring,a'_6: bitstring,h_pkce_2: bitstring,scope_6: bitstring) = m_48 in
                {299}if (tag1 = tag1'_2) then
                {300}if (a_2 = a'_6) then
                {301}new n2_6: bitstring;
                {302}new sskI_4: SecretKey;
                {303}let m_49: bitstring = aenc((tag2,n2_6,pk(sskI_4)),pke2_2) in
                {304}out(c_2, m_49);
                {305}in(c_2, m_50: bitstring);
                {306}let (tag3'_2: bitstring,n2'_6: bitstring,k2_2: SymmetricKey) = adec(m_50,sskI_4) in
                {307}if (tag3 = tag3'_2) then
                {308}if (n2_6 = n2'_6) then
                {309}let m_51: bitstring = enc((tag4,a_2,scope_6,h_pkce_2,u_2,password_2),k2_2) in
                {310}event browserSendsLastMessageToIssuer(m_49,m_50,m_51);
                {311}out(c_2, m_51);
                {312}in(c_2, m_52: bitstring);
                {313}let (tag5'_2: bitstring,code_6: bitstring) = dec(m_52,k2_2) in
                {314}if (tag5 = tag5'_2) then
                {315}new n_6: bitstring;
                {316}new sskI_5: SecretKey;
                {317}let m_53: bitstring = aenc((tag6,n_6,pk(sskI_5)),pka) in
                {318}out(c_2, m_53);
                {319}in(c_2, m_54: bitstring);
                {320}let (tag7'_2: bitstring,n'_2: bitstring,k1_6: SymmetricKey) = adec(m_54,sskI_5) in
                {321}if (tag7 = tag7'_2) then
                {322}if (n_6 = n'_2) then
                {323}let m_55: bitstring = enc((tag8,code_6),k1_6) in
                {324}event browserSendsLastMessageToApp(m_53,m_54,m_55);
                {325}out(c_2, m_55);
                {326}if talksOnlyToHonest_6 then
                {327}out(c_2, check_reach_browser);
                {328}event browserCompletesProtocol(m_49,m_50,m_51,m_52,m_53,m_54);
                {329}out(ch(code_6), free_code);
                {330}out(ch(password_2), free_password)
            )
            else
                {331}if ((e1_1 Ôëá a_2) && (e2_1 Ôëá i_2)) then
                {332}in(c_2, pke1_3: PublicKey);
                {333}in(c_2, pke2_3: PublicKey);
                {334}new wrong_pw_1: bitstring;
                {335}let talksOnlyToHonest_7: bool = false in
                {336}let password_3: bitstring = wrong_pw_1 in
                {337}in(c_2, m_56: bitstring);
                {338}let (tag1'_3: bitstring,a'_7: bitstring,h_pkce_3: bitstring,scope_7: bitstring) = m_56 in
                {339}if (tag1 = tag1'_3) then
                {340}if (e1_1 = a'_7) then
                {341}new n2_7: bitstring;
                {342}new sskI_6: SecretKey;
                {343}let m_57: bitstring = aenc((tag2,n2_7,pk(sskI_6)),pke2_3) in
                {344}out(c_2, m_57);
                {345}in(c_2, m_58: bitstring);
                {346}let (tag3'_3: bitstring,n2'_7: bitstring,k2_3: SymmetricKey) = adec(m_58,sskI_6) in
                {347}if (tag3 = tag3'_3) then
                {348}if (n2_7 = n2'_7) then
                {349}let m_59: bitstring = enc((tag4,e1_1,scope_7,h_pkce_3,u_2,password_3),k2_3) in
                {350}event browserSendsLastMessageToIssuer(m_57,m_58,m_59);
                {351}out(c_2, m_59);
                {352}in(c_2, m_60: bitstring);
                {353}let (tag5'_3: bitstring,code_7: bitstring) = dec(m_60,k2_3) in
                {354}if (tag5 = tag5'_3) then
                {355}new n_7: bitstring;
                {356}new sskI_7: SecretKey;
                {357}let m_61: bitstring = aenc((tag6,n_7,pk(sskI_7)),pke1_3) in
                {358}out(c_2, m_61);
                {359}in(c_2, m_62: bitstring);
                {360}let (tag7'_3: bitstring,n'_3: bitstring,k1_7: SymmetricKey) = adec(m_62,sskI_7) in
                {361}if (tag7 = tag7'_3) then
                {362}if (n_7 = n'_3) then
                {363}let m_63: bitstring = enc((tag8,code_7),k1_7) in
                {364}event browserSendsLastMessageToApp(m_61,m_62,m_63);
                {365}out(c_2, m_63);
                {366}if talksOnlyToHonest_7 then
                {367}out(c_2, check_reach_browser);
                {368}event browserCompletesProtocol(m_57,m_58,m_59,m_60,m_61,m_62);
                {369}out(ch(code_7), free_code);
                {370}out(ch(password_3), free_password)
) | (
    {371}!
    {372}let c_3: channel = c in
    {373}let i_3: bitstring = i in
    {374}let ski_1: SecretKey = ski in
    {375}let a_3: bitstring = a in
    {376}let pka_1: PublicKey = pk(ska) in
    {377}let u_3: bitstring = u in
    {378}let pku_1: PublicKey = pk(sku) in
    {379}let password_4: bitstring = password in
    {380}in(c_3, e1_2: bitstring);
    {381}in(c_3, e2_2: bitstring);
    {382}if ((e1_2 = a_3) && (e2_2 = u_3)) then
    (
        {383}let talksOnlyToHonest_8: bool = true in
        {384}in(c_3, m_64: bitstring);
        {385}let (tag2': bitstring,n_8: bitstring,spkI_4: PublicKey) = adec(m_64,ski_1) in
        {386}if (tag2 = tag2') then
        {387}new k2_4: SymmetricKey;
        {388}let m_65: bitstring = aenc((tag3,n_8,k2_4),spkI_4) in
        {389}out(c_3, m_65);
        {390}in(c_3, m_66: bitstring);
        {391}let (tag4': bitstring,a'_8: bitstring,h_pkce_4: bitstring,scope_8: bitstring,u'_4: bitstring,password': bitstring) = dec(m_66,k2_4) in
        {392}if (tag4 = tag4') then
        {393}if (a_3 = a'_8) then
        {394}if (u_3 = u'_4) then
        {395}if (password_4 = password') then
        {396}new code_8: bitstring;
        {397}let m_67: bitstring = enc((tag5,code_8),k2_4) in
        {398}event issuerSendsLastMessageToBrowser(m_64,m_65,m_66,m_67);
        {399}out(c_3, m_67);
        {400}in(c_3, m_68: bitstring);
        {401}let (tag9': bitstring,n2_8: bitstring,spkI2: PublicKey) = adec(m_68,ski_1) in
        {402}if (tag9 = tag9') then
        {403}new k3_4: SymmetricKey;
        {404}let m_69: bitstring = aenc((tag10,n2_8,k3_4),spkI2) in
        {405}out(c_3, m_69);
        {406}in(c_3, m_70: bitstring);
        {407}let (tag11': bitstring,pksks: PublicKey,signature: bitstring) = dec(m_70,k3_4) in
        {408}if (tag11 = tag11') then
        {409}let (a'': bitstring,jti_4: bitstring,code': bitstring,pkce_4: bitstring) = check(signature,pksks) in
        {410}if (a_3 = a'') then
        {411}if (code_8 = code') then
        {412}if (h_pkce_4 = hash(pkce_4)) then
        {413}let jtk_4: bitstring = hash_pk(pksks) in
        {414}let M_4: bitstring = (jtk_4,jti_4,scope_8,a_3,i_3,u_3) in
        {415}let m_71: bitstring = enc((tag12,sign(M_4,ski_1)),k3_4) in
        {416}event issuerSendsLastMessageToApp(m_68,m_69,m_70,m_71);
        {417}out(c_3, m_71);
        {418}if talksOnlyToHonest_8 then
        {419}out(c_3, check_reach_issuer);
        {420}event issuerCompletesProtocol(m_64,m_65,m_66,m_68,m_69,m_70);
        {421}out(ch(code_8), free_code);
        {422}out(ch(password_4), free_password)
    )
    else
        {423}if ((e1_2 Ôëá a_3) && (e2_2 = u_3)) then
        (
            {424}in(c_3, pke1_4: PublicKey);
            {425}let talksOnlyToHonest_9: bool = false in
            {426}in(c_3, m_72: bitstring);
            {427}let (tag2'_1: bitstring,n_9: bitstring,spkI_5: PublicKey) = adec(m_72,ski_1) in
            {428}if (tag2 = tag2'_1) then
            {429}new k2_5: SymmetricKey;
            {430}let m_73: bitstring = aenc((tag3,n_9,k2_5),spkI_5) in
            {431}out(c_3, m_73);
            {432}in(c_3, m_74: bitstring);
            {433}let (tag4'_1: bitstring,a'_9: bitstring,h_pkce_5: bitstring,scope_9: bitstring,u'_5: bitstring,password'_1: bitstring) = dec(m_74,k2_5) in
            {434}if (tag4 = tag4'_1) then
            {435}if (e1_2 = a'_9) then
            {436}if (u_3 = u'_5) then
            {437}if (password_4 = password'_1) then
            {438}new code_9: bitstring;
            {439}let m_75: bitstring = enc((tag5,code_9),k2_5) in
            {440}event issuerSendsLastMessageToBrowser(m_72,m_73,m_74,m_75);
            {441}out(c_3, m_75);
            {442}in(c_3, m_76: bitstring);
            {443}let (tag9'_1: bitstring,n2_9: bitstring,spkI2_1: PublicKey) = adec(m_76,ski_1) in
            {444}if (tag9 = tag9'_1) then
            {445}new k3_5: SymmetricKey;
            {446}let m_77: bitstring = aenc((tag10,n2_9,k3_5),spkI2_1) in
            {447}out(c_3, m_77);
            {448}in(c_3, m_78: bitstring);
            {449}let (tag11'_1: bitstring,pksks_1: PublicKey,signature_1: bitstring) = dec(m_78,k3_5) in
            {450}if (tag11 = tag11'_1) then
            {451}let (a''_1: bitstring,jti_5: bitstring,code'_1: bitstring,pkce_5: bitstring) = check(signature_1,pksks_1) in
            {452}if (e1_2 = a''_1) then
            {453}if (code_9 = code'_1) then
            {454}if (h_pkce_5 = hash(pkce_5)) then
            {455}let jtk_5: bitstring = hash_pk(pksks_1) in
            {456}let M_5: bitstring = (jtk_5,jti_5,scope_9,e1_2,i_3,u_3) in
            {457}let m_79: bitstring = enc((tag12,sign(M_5,ski_1)),k3_5) in
            {458}event issuerSendsLastMessageToApp(m_76,m_77,m_78,m_79);
            {459}out(c_3, m_79);
            {460}if talksOnlyToHonest_9 then
            {461}out(c_3, check_reach_issuer);
            {462}event issuerCompletesProtocol(m_72,m_73,m_74,m_76,m_77,m_78);
            {463}out(ch(code_9), free_code);
            {464}out(ch(password_4), free_password)
        )
        else
            {465}if ((e1_2 = a_3) && (e2_2 Ôëá u_3)) then
            (
                {466}new wrong_pw_2: bitstring;
                {467}in(c_3, pke2_4: PublicKey);
                {468}let talksOnlyToHonest_10: bool = false in
                {469}let password_5: bitstring = wrong_pw_2 in
                {470}in(c_3, m_80: bitstring);
                {471}let (tag2'_2: bitstring,n_10: bitstring,spkI_6: PublicKey) = adec(m_80,ski_1) in
                {472}if (tag2 = tag2'_2) then
                {473}new k2_6: SymmetricKey;
                {474}let m_81: bitstring = aenc((tag3,n_10,k2_6),spkI_6) in
                {475}out(c_3, m_81);
                {476}in(c_3, m_82: bitstring);
                {477}let (tag4'_2: bitstring,a'_10: bitstring,h_pkce_6: bitstring,scope_10: bitstring,u'_6: bitstring,password'_2: bitstring) = dec(m_82,k2_6) in
                {478}if (tag4 = tag4'_2) then
                {479}if (a_3 = a'_10) then
                {480}if (e2_2 = u'_6) then
                {481}if (password_5 = password'_2) then
                {482}new code_10: bitstring;
                {483}let m_83: bitstring = enc((tag5,code_10),k2_6) in
                {484}event issuerSendsLastMessageToBrowser(m_80,m_81,m_82,m_83);
                {485}out(c_3, m_83);
                {486}in(c_3, m_84: bitstring);
                {487}let (tag9'_2: bitstring,n2_10: bitstring,spkI2_2: PublicKey) = adec(m_84,ski_1) in
                {488}if (tag9 = tag9'_2) then
                {489}new k3_6: SymmetricKey;
                {490}let m_85: bitstring = aenc((tag10,n2_10,k3_6),spkI2_2) in
                {491}out(c_3, m_85);
                {492}in(c_3, m_86: bitstring);
                {493}let (tag11'_2: bitstring,pksks_2: PublicKey,signature_2: bitstring) = dec(m_86,k3_6) in
                {494}if (tag11 = tag11'_2) then
                {495}let (a''_2: bitstring,jti_6: bitstring,code'_2: bitstring,pkce_6: bitstring) = check(signature_2,pksks_2) in
                {496}if (a_3 = a''_2) then
                {497}if (code_10 = code'_2) then
                {498}if (h_pkce_6 = hash(pkce_6)) then
                {499}let jtk_6: bitstring = hash_pk(pksks_2) in
                {500}let M_6: bitstring = (jtk_6,jti_6,scope_10,a_3,i_3,e2_2) in
                {501}let m_87: bitstring = enc((tag12,sign(M_6,ski_1)),k3_6) in
                {502}event issuerSendsLastMessageToApp(m_84,m_85,m_86,m_87);
                {503}out(c_3, m_87);
                {504}if talksOnlyToHonest_10 then
                {505}out(c_3, check_reach_issuer);
                {506}event issuerCompletesProtocol(m_80,m_81,m_82,m_84,m_85,m_86);
                {507}out(ch(code_10), free_code);
                {508}out(ch(password_5), free_password)
            )
            else
                {509}if ((e1_2 Ôëá a_3) && (e2_2 Ôëá u_3)) then
                {510}new wrong_pw_3: bitstring;
                {511}in(c_3, pke1_5: PublicKey);
                {512}in(c_3, pke2_5: PublicKey);
                {513}let talksOnlyToHonest_11: bool = false in
                {514}let password_6: bitstring = wrong_pw_3 in
                {515}in(c_3, m_88: bitstring);
                {516}let (tag2'_3: bitstring,n_11: bitstring,spkI_7: PublicKey) = adec(m_88,ski_1) in
                {517}if (tag2 = tag2'_3) then
                {518}new k2_7: SymmetricKey;
                {519}let m_89: bitstring = aenc((tag3,n_11,k2_7),spkI_7) in
                {520}out(c_3, m_89);
                {521}in(c_3, m_90: bitstring);
                {522}let (tag4'_3: bitstring,a'_11: bitstring,h_pkce_7: bitstring,scope_11: bitstring,u'_7: bitstring,password'_3: bitstring) = dec(m_90,k2_7) in
                {523}if (tag4 = tag4'_3) then
                {524}if (e1_2 = a'_11) then
                {525}if (e2_2 = u'_7) then
                {526}if (password_6 = password'_3) then
                {527}new code_11: bitstring;
                {528}let m_91: bitstring = enc((tag5,code_11),k2_7) in
                {529}event issuerSendsLastMessageToBrowser(m_88,m_89,m_90,m_91);
                {530}out(c_3, m_91);
                {531}in(c_3, m_92: bitstring);
                {532}let (tag9'_3: bitstring,n2_11: bitstring,spkI2_3: PublicKey) = adec(m_92,ski_1) in
                {533}if (tag9 = tag9'_3) then
                {534}new k3_7: SymmetricKey;
                {535}let m_93: bitstring = aenc((tag10,n2_11,k3_7),spkI2_3) in
                {536}out(c_3, m_93);
                {537}in(c_3, m_94: bitstring);
                {538}let (tag11'_3: bitstring,pksks_3: PublicKey,signature_3: bitstring) = dec(m_94,k3_7) in
                {539}if (tag11 = tag11'_3) then
                {540}let (a''_3: bitstring,jti_7: bitstring,code'_3: bitstring,pkce_7: bitstring) = check(signature_3,pksks_3) in
                {541}if (e1_2 = a''_3) then
                {542}if (code_11 = code'_3) then
                {543}if (h_pkce_7 = hash(pkce_7)) then
                {544}let jtk_7: bitstring = hash_pk(pksks_3) in
                {545}let M_7: bitstring = (jtk_7,jti_7,scope_11,e1_2,i_3,e2_2) in
                {546}let m_95: bitstring = enc((tag12,sign(M_7,ski_1)),k3_7) in
                {547}event issuerSendsLastMessageToApp(m_92,m_93,m_94,m_95);
                {548}out(c_3, m_95);
                {549}if talksOnlyToHonest_11 then
                {550}out(c_3, check_reach_issuer);
                {551}event issuerCompletesProtocol(m_88,m_89,m_90,m_92,m_93,m_94);
                {552}out(ch(code_11), free_code);
                {553}out(ch(password_6), free_password)
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}new a: bitstring;
{2}new u: bitstring;
{3}new i: bitstring;
{4}out(c, a);
{5}out(c, u);
{6}out(c, i);
{7}new ska: SecretKey;
{8}new sku: SecretKey;
{9}new ski: SecretKey;
{10}out(c, pk(ska));
{11}out(c, pk(sku));
{12}out(c, pk(ski));
{13}new password: bitstring;
(
    {14}!
    {15}let c_1: channel = c in
    {22}in(c_1, e1: bitstring);
    {23}in(c_1, e2: bitstring);
    {21}let pki: PublicKey = pk(ski) in
    {20}let i_1: bitstring = i in
    {18}let u_1: bitstring = u in
    {17}let ska_1: SecretKey = ska in
    {16}let a_1: bitstring = a in
    {24}if ((e1 = u_1) && (e2 = i_1)) then
    (
        {26}new pkce: bitstring;
        {27}new scope: bitstring;
        {28}let m_1: bitstring = (tag1,a_1,hash(pkce),scope) in
        {29}out(c_1, m_1);
        {30}in(c_1, m_6: bitstring);
        {31}let (tag6': bitstring,n: bitstring,spkI: PublicKey) = adec(m_6,ska_1) in
        {32}if (tag6 = tag6') then
        {33}new k1: SymmetricKey;
        {34}let m_7: bitstring = aenc((tag7,n,k1),spkI) in
        {35}event appSendsLastMessageToBrowser(m_6,m_7);
        {36}out(c_1, m_7);
        {37}in(c_1, m_8: bitstring);
        {38}let (tag8': bitstring,code: bitstring) = dec(m_8,k1) in
        {39}if (tag8 = tag8') then
        {40}new n2: bitstring;
        {41}new sskI2: SecretKey;
        {42}let m_9: bitstring = aenc((tag9,n2,pk(sskI2)),pki) in
        {43}out(c_1, m_9);
        {44}in(c_1, m_10: bitstring);
        {45}let (tag10': bitstring,n2': bitstring,k3: SymmetricKey) = adec(m_10,sskI2) in
        {46}if (tag10 = tag10') then
        {47}if (n2 = n2') then
        {48}new sks: SecretKey;
        {49}new jti: bitstring;
        {50}let T2: bitstring = (a_1,jti,code,pkce) in
        {51}let m_11: bitstring = enc((tag11,pk(sks),sign(T2,sks)),k3) in
        {52}event appSendsLastMessageToIssuer(m_9,m_10,m_11);
        {53}out(c_1, m_11);
        {54}in(c_1, m_12: bitstring);
        {55}let (tag12': bitstring,signed_M: bitstring) = dec(m_12,k3) in
        {56}if (tag12 = tag12') then
        {57}let M: bitstring = check(signed_M,pki) in
        {58}let (jtk: bitstring,jti': bitstring,scope': bitstring,a': bitstring,i': bitstring,u': bitstring) = M in
        {59}if (jtk = hash_pk(pk(sks))) then
        {60}if (jti = jti') then
        {61}if (scope = scope') then
        {62}if (a_1 = a') then
        {63}if (i_1 = i') then
        {64}if (u_1 = u') then
        {25}let talksOnlyToHonest: bool = true in
        {65}if talksOnlyToHonest then
        {66}out(c_1, check_reach_app);
        {67}event appCompletesProtocol(m_6,m_7,m_8,m_9,m_10,m_11,m_12);
        {68}out(ch(code), free_code)
    )
    else
        {69}if ((e1 Ôëá u_1) && (e2 = i_1)) then
        (
            {70}in(c_1, pke1: PublicKey);
            {72}new pkce_1: bitstring;
            {73}new scope_1: bitstring;
            {74}let m: bitstring = (tag1,a_1,hash(pkce_1),scope_1) in
            {75}out(c_1, m);
            {76}in(c_1, m_2: bitstring);
            {77}let (tag6'_1: bitstring,n_1: bitstring,spkI_1: PublicKey) = adec(m_2,ska_1) in
            {78}if (tag6 = tag6'_1) then
            {79}new k1_1: SymmetricKey;
            {80}let m_3: bitstring = aenc((tag7,n_1,k1_1),spkI_1) in
            {81}event appSendsLastMessageToBrowser(m_2,m_3);
            {82}out(c_1, m_3);
            {83}in(c_1, m_4: bitstring);
            {84}let (tag8'_1: bitstring,code_1: bitstring) = dec(m_4,k1_1) in
            {85}if (tag8 = tag8'_1) then
            {86}new n2_1: bitstring;
            {87}new sskI2_1: SecretKey;
            {88}let m_5: bitstring = aenc((tag9,n2_1,pk(sskI2_1)),pki) in
            {89}out(c_1, m_5);
            {90}in(c_1, m_13: bitstring);
            {91}let (tag10'_1: bitstring,n2'_1: bitstring,k3_1: SymmetricKey) = adec(m_13,sskI2_1) in
            {92}if (tag10 = tag10'_1) then
            {93}if (n2_1 = n2'_1) then
            {94}new sks_1: SecretKey;
            {95}new jti_1: bitstring;
            {96}let T2_1: bitstring = (a_1,jti_1,code_1,pkce_1) in
            {97}let m_14: bitstring = enc((tag11,pk(sks_1),sign(T2_1,sks_1)),k3_1) in
            {98}event appSendsLastMessageToIssuer(m_5,m_13,m_14);
            {99}out(c_1, m_14);
            {100}in(c_1, m_15: bitstring);
            {101}let (tag12'_1: bitstring,signed_M_1: bitstring) = dec(m_15,k3_1) in
            {102}if (tag12 = tag12'_1) then
            {103}let M_1: bitstring = check(signed_M_1,pki) in
            {104}let (jtk_1: bitstring,jti'_1: bitstring,scope'_1: bitstring,a'_1: bitstring,i'_1: bitstring,u'_1: bitstring) = M_1 in
            {105}if (jtk_1 = hash_pk(pk(sks_1))) then
            {106}if (jti_1 = jti'_1) then
            {107}if (scope_1 = scope'_1) then
            {108}if (a_1 = a'_1) then
            {109}if (i_1 = i'_1) then
            {110}if (e1 = u'_1) then
            {71}let talksOnlyToHonest_1: bool = false in
            {111}if talksOnlyToHonest_1 then
            {112}out(c_1, check_reach_app);
            {113}event appCompletesProtocol(m_2,m_3,m_4,m_5,m_13,m_14,m_15);
            {114}out(ch(code_1), free_code)
        )
        else
            {115}if ((e1 = u_1) && (e2 Ôëá i_1)) then
            (
                {116}in(c_1, pke2: PublicKey);
                {118}new pkce_2: bitstring;
                {119}new scope_2: bitstring;
                {120}let m_16: bitstring = (tag1,a_1,hash(pkce_2),scope_2) in
                {121}out(c_1, m_16);
                {122}in(c_1, m_17: bitstring);
                {123}let (tag6'_2: bitstring,n_2: bitstring,spkI_2: PublicKey) = adec(m_17,ska_1) in
                {124}if (tag6 = tag6'_2) then
                {125}new k1_2: SymmetricKey;
                {126}let m_18: bitstring = aenc((tag7,n_2,k1_2),spkI_2) in
                {127}event appSendsLastMessageToBrowser(m_17,m_18);
                {128}out(c_1, m_18);
                {129}in(c_1, m_19: bitstring);
                {130}let (tag8'_2: bitstring,code_2: bitstring) = dec(m_19,k1_2) in
                {131}if (tag8 = tag8'_2) then
                {132}new n2_2: bitstring;
                {133}new sskI2_2: SecretKey;
                {134}let m_20: bitstring = aenc((tag9,n2_2,pk(sskI2_2)),pke2) in
                {135}out(c_1, m_20);
                {136}in(c_1, m_21: bitstring);
                {137}let (tag10'_2: bitstring,n2'_2: bitstring,k3_2: SymmetricKey) = adec(m_21,sskI2_2) in
                {138}if (tag10 = tag10'_2) then
                {139}if (n2_2 = n2'_2) then
                {140}new sks_2: SecretKey;
                {141}new jti_2: bitstring;
                {142}let T2_2: bitstring = (a_1,jti_2,code_2,pkce_2) in
                {143}let m_22: bitstring = enc((tag11,pk(sks_2),sign(T2_2,sks_2)),k3_2) in
                {144}event appSendsLastMessageToIssuer(m_20,m_21,m_22);
                {145}out(c_1, m_22);
                {146}in(c_1, m_23: bitstring);
                {147}let (tag12'_2: bitstring,signed_M_2: bitstring) = dec(m_23,k3_2) in
                {148}if (tag12 = tag12'_2) then
                {149}let M_2: bitstring = check(signed_M_2,pke2) in
                {150}let (jtk_2: bitstring,jti'_2: bitstring,scope'_2: bitstring,a'_2: bitstring,i'_2: bitstring,u'_2: bitstring) = M_2 in
                {151}if (jtk_2 = hash_pk(pk(sks_2))) then
                {152}if (jti_2 = jti'_2) then
                {153}if (scope_2 = scope'_2) then
                {154}if (a_1 = a'_2) then
                {155}if (e2 = i'_2) then
                {156}if (u_1 = u'_2) then
                {117}let talksOnlyToHonest_2: bool = false in
                {157}if talksOnlyToHonest_2 then
                {158}out(c_1, check_reach_app);
                {159}event appCompletesProtocol(m_17,m_18,m_19,m_20,m_21,m_22,m_23);
                {160}out(ch(code_2), free_code)
            )
            else
                {161}if ((e1 Ôëá u_1) && (e2 Ôëá i_1)) then
                {162}in(c_1, pke1_1: PublicKey);
                {163}in(c_1, pke2_1: PublicKey);
                {165}new pkce_3: bitstring;
                {166}new scope_3: bitstring;
                {167}let m_24: bitstring = (tag1,a_1,hash(pkce_3),scope_3) in
                {168}out(c_1, m_24);
                {169}in(c_1, m_25: bitstring);
                {170}let (tag6'_3: bitstring,n_3: bitstring,spkI_3: PublicKey) = adec(m_25,ska_1) in
                {171}if (tag6 = tag6'_3) then
                {172}new k1_3: SymmetricKey;
                {173}let m_26: bitstring = aenc((tag7,n_3,k1_3),spkI_3) in
                {174}event appSendsLastMessageToBrowser(m_25,m_26);
                {175}out(c_1, m_26);
                {176}in(c_1, m_27: bitstring);
                {177}let (tag8'_3: bitstring,code_3: bitstring) = dec(m_27,k1_3) in
                {178}if (tag8 = tag8'_3) then
                {179}new n2_3: bitstring;
                {180}new sskI2_3: SecretKey;
                {181}let m_28: bitstring = aenc((tag9,n2_3,pk(sskI2_3)),pke2_1) in
                {182}out(c_1, m_28);
                {183}in(c_1, m_29: bitstring);
                {184}let (tag10'_3: bitstring,n2'_3: bitstring,k3_3: SymmetricKey) = adec(m_29,sskI2_3) in
                {185}if (tag10 = tag10'_3) then
                {186}if (n2_3 = n2'_3) then
                {187}new sks_3: SecretKey;
                {188}new jti_3: bitstring;
                {189}let T2_3: bitstring = (a_1,jti_3,code_3,pkce_3) in
                {190}let m_30: bitstring = enc((tag11,pk(sks_3),sign(T2_3,sks_3)),k3_3) in
                {191}event appSendsLastMessageToIssuer(m_28,m_29,m_30);
                {192}out(c_1, m_30);
                {193}in(c_1, m_31: bitstring);
                {194}let (tag12'_3: bitstring,signed_M_3: bitstring) = dec(m_31,k3_3) in
                {195}if (tag12 = tag12'_3) then
                {196}let M_3: bitstring = check(signed_M_3,pke2_1) in
                {197}let (jtk_3: bitstring,jti'_3: bitstring,scope'_3: bitstring,a'_3: bitstring,i'_3: bitstring,u'_3: bitstring) = M_3 in
                {198}if (jtk_3 = hash_pk(pk(sks_3))) then
                {199}if (jti_3 = jti'_3) then
                {200}if (scope_3 = scope'_3) then
                {201}if (a_1 = a'_3) then
                {202}if (e2 = i'_3) then
                {203}if (e1 = u'_3) then
                {164}let talksOnlyToHonest_3: bool = false in
                {204}if talksOnlyToHonest_3 then
                {205}out(c_1, check_reach_app);
                {206}event appCompletesProtocol(m_25,m_26,m_27,m_28,m_29,m_30,m_31);
                {207}out(ch(code_3), free_code)
) | (
    {208}!
    {209}let c_2: channel = c in
    {217}in(c_2, e1_1: bitstring);
    {218}in(c_2, e2_1: bitstring);
    {216}let password_1: bitstring = password in
    {215}let pki_1: PublicKey = pk(ski) in
    {214}let i_2: bitstring = i in
    {213}let pka: PublicKey = pk(ska) in
    {212}let a_2: bitstring = a in
    {210}let u_2: bitstring = u in
    {219}if ((e1_1 = a_2) && (e2_1 = i_2)) then
    (
        {221}in(c_2, m_32: bitstring);
        {222}let (tag1': bitstring,a'_4: bitstring,h_pkce: bitstring,scope_4: bitstring) = m_32 in
        {223}if (tag1 = tag1') then
        {224}if (a_2 = a'_4) then
        {225}new n2_4: bitstring;
        {226}new sskI: SecretKey;
        {227}let m_33: bitstring = aenc((tag2,n2_4,pk(sskI)),pki_1) in
        {228}out(c_2, m_33);
        {229}in(c_2, m_34: bitstring);
        {230}let (tag3': bitstring,n2'_4: bitstring,k2: SymmetricKey) = adec(m_34,sskI) in
        {231}if (tag3 = tag3') then
        {232}if (n2_4 = n2'_4) then
        {233}let m_35: bitstring = enc((tag4,a_2,scope_4,h_pkce,u_2,password_1),k2) in
        {234}event browserSendsLastMessageToIssuer(m_33,m_34,m_35);
        {235}out(c_2, m_35);
        {236}in(c_2, m_36: bitstring);
        {237}let (tag5': bitstring,code_4: bitstring) = dec(m_36,k2) in
        {238}if (tag5 = tag5') then
        {239}new n_4: bitstring;
        {240}new sskI_1: SecretKey;
        {241}let m_37: bitstring = aenc((tag6,n_4,pk(sskI_1)),pka) in
        {242}out(c_2, m_37);
        {243}in(c_2, m_38: bitstring);
        {244}let (tag7': bitstring,n': bitstring,k1_4: SymmetricKey) = adec(m_38,sskI_1) in
        {245}if (tag7 = tag7') then
        {246}if (n_4 = n') then
        {247}let m_39: bitstring = enc((tag8,code_4),k1_4) in
        {248}event browserSendsLastMessageToApp(m_37,m_38,m_39);
        {249}out(c_2, m_39);
        {220}let talksOnlyToHonest_4: bool = true in
        {250}if talksOnlyToHonest_4 then
        {251}out(c_2, check_reach_browser);
        {252}event browserCompletesProtocol(m_33,m_34,m_35,m_36,m_37,m_38);
        {253}out(ch(code_4), free_code);
        {254}out(ch(password_1), free_password)
    )
    else
        {255}if ((e1_1 Ôëá a_2) && (e2_1 = i_2)) then
        (
            {256}in(c_2, pke1_2: PublicKey);
            {258}in(c_2, m_40: bitstring);
            {259}let (tag1'_1: bitstring,a'_5: bitstring,h_pkce_1: bitstring,scope_5: bitstring) = m_40 in
            {260}if (tag1 = tag1'_1) then
            {261}if (e1_1 = a'_5) then
            {262}new n2_5: bitstring;
            {263}new sskI_2: SecretKey;
            {264}let m_41: bitstring = aenc((tag2,n2_5,pk(sskI_2)),pki_1) in
            {265}out(c_2, m_41);
            {266}in(c_2, m_42: bitstring);
            {267}let (tag3'_1: bitstring,n2'_5: bitstring,k2_1: SymmetricKey) = adec(m_42,sskI_2) in
            {268}if (tag3 = tag3'_1) then
            {269}if (n2_5 = n2'_5) then
            {270}let m_43: bitstring = enc((tag4,e1_1,scope_5,h_pkce_1,u_2,password_1),k2_1) in
            {271}event browserSendsLastMessageToIssuer(m_41,m_42,m_43);
            {272}out(c_2, m_43);
            {273}in(c_2, m_44: bitstring);
            {274}let (tag5'_1: bitstring,code_5: bitstring) = dec(m_44,k2_1) in
            {275}if (tag5 = tag5'_1) then
            {276}new n_5: bitstring;
            {277}new sskI_3: SecretKey;
            {278}let m_45: bitstring = aenc((tag6,n_5,pk(sskI_3)),pke1_2) in
            {279}out(c_2, m_45);
            {280}in(c_2, m_46: bitstring);
            {281}let (tag7'_1: bitstring,n'_1: bitstring,k1_5: SymmetricKey) = adec(m_46,sskI_3) in
            {282}if (tag7 = tag7'_1) then
            {283}if (n_5 = n'_1) then
            {284}let m_47: bitstring = enc((tag8,code_5),k1_5) in
            {285}event browserSendsLastMessageToApp(m_45,m_46,m_47);
            {286}out(c_2, m_47);
            {257}let talksOnlyToHonest_5: bool = false in
            {287}if talksOnlyToHonest_5 then
            {288}out(c_2, check_reach_browser);
            {289}event browserCompletesProtocol(m_41,m_42,m_43,m_44,m_45,m_46);
            {290}out(ch(code_5), free_code);
            {291}out(ch(password_1), free_password)
        )
        else
            {292}if ((e1_1 = a_2) && (e2_1 Ôëá i_2)) then
            (
                {293}in(c_2, pke2_2: PublicKey);
                {294}new wrong_pw: bitstring;
                {297}in(c_2, m_48: bitstring);
                {298}let (tag1'_2: bitstring,a'_6: bitstring,h_pkce_2: bitstring,scope_6: bitstring) = m_48 in
                {299}if (tag1 = tag1'_2) then
                {300}if (a_2 = a'_6) then
                {301}new n2_6: bitstring;
                {302}new sskI_4: SecretKey;
                {303}let m_49: bitstring = aenc((tag2,n2_6,pk(sskI_4)),pke2_2) in
                {304}out(c_2, m_49);
                {305}in(c_2, m_50: bitstring);
                {306}let (tag3'_2: bitstring,n2'_6: bitstring,k2_2: SymmetricKey) = adec(m_50,sskI_4) in
                {307}if (tag3 = tag3'_2) then
                {308}if (n2_6 = n2'_6) then
                {296}let password_2: bitstring = wrong_pw in
                {309}let m_51: bitstring = enc((tag4,a_2,scope_6,h_pkce_2,u_2,password_2),k2_2) in
                {310}event browserSendsLastMessageToIssuer(m_49,m_50,m_51);
                {311}out(c_2, m_51);
                {312}in(c_2, m_52: bitstring);
                {313}let (tag5'_2: bitstring,code_6: bitstring) = dec(m_52,k2_2) in
                {314}if (tag5 = tag5'_2) then
                {315}new n_6: bitstring;
                {316}new sskI_5: SecretKey;
                {317}let m_53: bitstring = aenc((tag6,n_6,pk(sskI_5)),pka) in
                {318}out(c_2, m_53);
                {319}in(c_2, m_54: bitstring);
                {320}let (tag7'_2: bitstring,n'_2: bitstring,k1_6: SymmetricKey) = adec(m_54,sskI_5) in
                {321}if (tag7 = tag7'_2) then
                {322}if (n_6 = n'_2) then
                {323}let m_55: bitstring = enc((tag8,code_6),k1_6) in
                {324}event browserSendsLastMessageToApp(m_53,m_54,m_55);
                {325}out(c_2, m_55);
                {295}let talksOnlyToHonest_6: bool = false in
                {326}if talksOnlyToHonest_6 then
                {327}out(c_2, check_reach_browser);
                {328}event browserCompletesProtocol(m_49,m_50,m_51,m_52,m_53,m_54);
                {329}out(ch(code_6), free_code);
                {330}out(ch(password_2), free_password)
            )
            else
                {331}if ((e1_1 Ôëá a_2) && (e2_1 Ôëá i_2)) then
                {332}in(c_2, pke1_3: PublicKey);
                {333}in(c_2, pke2_3: PublicKey);
                {334}new wrong_pw_1: bitstring;
                {337}in(c_2, m_56: bitstring);
                {338}let (tag1'_3: bitstring,a'_7: bitstring,h_pkce_3: bitstring,scope_7: bitstring) = m_56 in
                {339}if (tag1 = tag1'_3) then
                {340}if (e1_1 = a'_7) then
                {341}new n2_7: bitstring;
                {342}new sskI_6: SecretKey;
                {343}let m_57: bitstring = aenc((tag2,n2_7,pk(sskI_6)),pke2_3) in
                {344}out(c_2, m_57);
                {345}in(c_2, m_58: bitstring);
                {346}let (tag3'_3: bitstring,n2'_7: bitstring,k2_3: SymmetricKey) = adec(m_58,sskI_6) in
                {347}if (tag3 = tag3'_3) then
                {348}if (n2_7 = n2'_7) then
                {336}let password_3: bitstring = wrong_pw_1 in
                {349}let m_59: bitstring = enc((tag4,e1_1,scope_7,h_pkce_3,u_2,password_3),k2_3) in
                {350}event browserSendsLastMessageToIssuer(m_57,m_58,m_59);
                {351}out(c_2, m_59);
                {352}in(c_2, m_60: bitstring);
                {353}let (tag5'_3: bitstring,code_7: bitstring) = dec(m_60,k2_3) in
                {354}if (tag5 = tag5'_3) then
                {355}new n_7: bitstring;
                {356}new sskI_7: SecretKey;
                {357}let m_61: bitstring = aenc((tag6,n_7,pk(sskI_7)),pke1_3) in
                {358}out(c_2, m_61);
                {359}in(c_2, m_62: bitstring);
                {360}let (tag7'_3: bitstring,n'_3: bitstring,k1_7: SymmetricKey) = adec(m_62,sskI_7) in
                {361}if (tag7 = tag7'_3) then
                {362}if (n_7 = n'_3) then
                {363}let m_63: bitstring = enc((tag8,code_7),k1_7) in
                {364}event browserSendsLastMessageToApp(m_61,m_62,m_63);
                {365}out(c_2, m_63);
                {335}let talksOnlyToHonest_7: bool = false in
                {366}if talksOnlyToHonest_7 then
                {367}out(c_2, check_reach_browser);
                {368}event browserCompletesProtocol(m_57,m_58,m_59,m_60,m_61,m_62);
                {369}out(ch(code_7), free_code);
                {370}out(ch(password_3), free_password)
) | (
    {371}!
    {372}let c_3: channel = c in
    {380}in(c_3, e1_2: bitstring);
    {381}in(c_3, e2_2: bitstring);
    {379}let password_4: bitstring = password in
    {377}let u_3: bitstring = u in
    {375}let a_3: bitstring = a in
    {374}let ski_1: SecretKey = ski in
    {373}let i_3: bitstring = i in
    {382}if ((e1_2 = a_3) && (e2_2 = u_3)) then
    (
        {384}in(c_3, m_64: bitstring);
        {385}let (tag2': bitstring,n_8: bitstring,spkI_4: PublicKey) = adec(m_64,ski_1) in
        {386}if (tag2 = tag2') then
        {387}new k2_4: SymmetricKey;
        {388}let m_65: bitstring = aenc((tag3,n_8,k2_4),spkI_4) in
        {389}out(c_3, m_65);
        {390}in(c_3, m_66: bitstring);
        {391}let (tag4': bitstring,a'_8: bitstring,h_pkce_4: bitstring,scope_8: bitstring,u'_4: bitstring,password': bitstring) = dec(m_66,k2_4) in
        {392}if (tag4 = tag4') then
        {393}if (a_3 = a'_8) then
        {394}if (u_3 = u'_4) then
        {395}if (password_4 = password') then
        {396}new code_8: bitstring;
        {397}let m_67: bitstring = enc((tag5,code_8),k2_4) in
        {398}event issuerSendsLastMessageToBrowser(m_64,m_65,m_66,m_67);
        {399}out(c_3, m_67);
        {400}in(c_3, m_68: bitstring);
        {401}let (tag9': bitstring,n2_8: bitstring,spkI2: PublicKey) = adec(m_68,ski_1) in
        {402}if (tag9 = tag9') then
        {403}new k3_4: SymmetricKey;
        {404}let m_69: bitstring = aenc((tag10,n2_8,k3_4),spkI2) in
        {405}out(c_3, m_69);
        {406}in(c_3, m_70: bitstring);
        {407}let (tag11': bitstring,pksks: PublicKey,signature: bitstring) = dec(m_70,k3_4) in
        {408}if (tag11 = tag11') then
        {409}let (a'': bitstring,jti_4: bitstring,code': bitstring,pkce_4: bitstring) = check(signature,pksks) in
        {410}if (a_3 = a'') then
        {411}if (code_8 = code') then
        {412}if (h_pkce_4 = hash(pkce_4)) then
        {413}let jtk_4: bitstring = hash_pk(pksks) in
        {414}let M_4: bitstring = (jtk_4,jti_4,scope_8,a_3,i_3,u_3) in
        {415}let m_71: bitstring = enc((tag12,sign(M_4,ski_1)),k3_4) in
        {416}event issuerSendsLastMessageToApp(m_68,m_69,m_70,m_71);
        {417}out(c_3, m_71);
        {383}let talksOnlyToHonest_8: bool = true in
        {418}if talksOnlyToHonest_8 then
        {419}out(c_3, check_reach_issuer);
        {420}event issuerCompletesProtocol(m_64,m_65,m_66,m_68,m_69,m_70);
        {421}out(ch(code_8), free_code);
        {422}out(ch(password_4), free_password)
    )
    else
        {423}if ((e1_2 Ôëá a_3) && (e2_2 = u_3)) then
        (
            {424}in(c_3, pke1_4: PublicKey);
            {426}in(c_3, m_72: bitstring);
            {427}let (tag2'_1: bitstring,n_9: bitstring,spkI_5: PublicKey) = adec(m_72,ski_1) in
            {428}if (tag2 = tag2'_1) then
            {429}new k2_5: SymmetricKey;
            {430}let m_73: bitstring = aenc((tag3,n_9,k2_5),spkI_5) in
            {431}out(c_3, m_73);
            {432}in(c_3, m_74: bitstring);
            {433}let (tag4'_1: bitstring,a'_9: bitstring,h_pkce_5: bitstring,scope_9: bitstring,u'_5: bitstring,password'_1: bitstring) = dec(m_74,k2_5) in
            {434}if (tag4 = tag4'_1) then
            {435}if (e1_2 = a'_9) then
            {436}if (u_3 = u'_5) then
            {437}if (password_4 = password'_1) then
            {438}new code_9: bitstring;
            {439}let m_75: bitstring = enc((tag5,code_9),k2_5) in
            {440}event issuerSendsLastMessageToBrowser(m_72,m_73,m_74,m_75);
            {441}out(c_3, m_75);
            {442}in(c_3, m_76: bitstring);
            {443}let (tag9'_1: bitstring,n2_9: bitstring,spkI2_1: PublicKey) = adec(m_76,ski_1) in
            {444}if (tag9 = tag9'_1) then
            {445}new k3_5: SymmetricKey;
            {446}let m_77: bitstring = aenc((tag10,n2_9,k3_5),spkI2_1) in
            {447}out(c_3, m_77);
            {448}in(c_3, m_78: bitstring);
            {449}let (tag11'_1: bitstring,pksks_1: PublicKey,signature_1: bitstring) = dec(m_78,k3_5) in
            {450}if (tag11 = tag11'_1) then
            {451}let (a''_1: bitstring,jti_5: bitstring,code'_1: bitstring,pkce_5: bitstring) = check(signature_1,pksks_1) in
            {452}if (e1_2 = a''_1) then
            {453}if (code_9 = code'_1) then
            {454}if (h_pkce_5 = hash(pkce_5)) then
            {455}let jtk_5: bitstring = hash_pk(pksks_1) in
            {456}let M_5: bitstring = (jtk_5,jti_5,scope_9,e1_2,i_3,u_3) in
            {457}let m_79: bitstring = enc((tag12,sign(M_5,ski_1)),k3_5) in
            {458}event issuerSendsLastMessageToApp(m_76,m_77,m_78,m_79);
            {459}out(c_3, m_79);
            {425}let talksOnlyToHonest_9: bool = false in
            {460}if talksOnlyToHonest_9 then
            {461}out(c_3, check_reach_issuer);
            {462}event issuerCompletesProtocol(m_72,m_73,m_74,m_76,m_77,m_78);
            {463}out(ch(code_9), free_code);
            {464}out(ch(password_4), free_password)
        )
        else
            {465}if ((e1_2 = a_3) && (e2_2 Ôëá u_3)) then
            (
                {466}new wrong_pw_2: bitstring;
                {467}in(c_3, pke2_4: PublicKey);
                {470}in(c_3, m_80: bitstring);
                {471}let (tag2'_2: bitstring,n_10: bitstring,spkI_6: PublicKey) = adec(m_80,ski_1) in
                {472}if (tag2 = tag2'_2) then
                {473}new k2_6: SymmetricKey;
                {474}let m_81: bitstring = aenc((tag3,n_10,k2_6),spkI_6) in
                {475}out(c_3, m_81);
                {476}in(c_3, m_82: bitstring);
                {477}let (tag4'_2: bitstring,a'_10: bitstring,h_pkce_6: bitstring,scope_10: bitstring,u'_6: bitstring,password'_2: bitstring) = dec(m_82,k2_6) in
                {478}if (tag4 = tag4'_2) then
                {479}if (a_3 = a'_10) then
                {480}if (e2_2 = u'_6) then
                {469}let password_5: bitstring = wrong_pw_2 in
                {481}if (password_5 = password'_2) then
                {482}new code_10: bitstring;
                {483}let m_83: bitstring = enc((tag5,code_10),k2_6) in
                {484}event issuerSendsLastMessageToBrowser(m_80,m_81,m_82,m_83);
                {485}out(c_3, m_83);
                {486}in(c_3, m_84: bitstring);
                {487}let (tag9'_2: bitstring,n2_10: bitstring,spkI2_2: PublicKey) = adec(m_84,ski_1) in
                {488}if (tag9 = tag9'_2) then
                {489}new k3_6: SymmetricKey;
                {490}let m_85: bitstring = aenc((tag10,n2_10,k3_6),spkI2_2) in
                {491}out(c_3, m_85);
                {492}in(c_3, m_86: bitstring);
                {493}let (tag11'_2: bitstring,pksks_2: PublicKey,signature_2: bitstring) = dec(m_86,k3_6) in
                {494}if (tag11 = tag11'_2) then
                {495}let (a''_2: bitstring,jti_6: bitstring,code'_2: bitstring,pkce_6: bitstring) = check(signature_2,pksks_2) in
                {496}if (a_3 = a''_2) then
                {497}if (code_10 = code'_2) then
                {498}if (h_pkce_6 = hash(pkce_6)) then
                {499}let jtk_6: bitstring = hash_pk(pksks_2) in
                {500}let M_6: bitstring = (jtk_6,jti_6,scope_10,a_3,i_3,e2_2) in
                {501}let m_87: bitstring = enc((tag12,sign(M_6,ski_1)),k3_6) in
                {502}event issuerSendsLastMessageToApp(m_84,m_85,m_86,m_87);
                {503}out(c_3, m_87);
                {468}let talksOnlyToHonest_10: bool = false in
                {504}if talksOnlyToHonest_10 then
                {505}out(c_3, check_reach_issuer);
                {506}event issuerCompletesProtocol(m_80,m_81,m_82,m_84,m_85,m_86);
                {507}out(ch(code_10), free_code);
                {508}out(ch(password_5), free_password)
            )
            else
                {509}if ((e1_2 Ôëá a_3) && (e2_2 Ôëá u_3)) then
                {510}new wrong_pw_3: bitstring;
                {511}in(c_3, pke1_5: PublicKey);
                {512}in(c_3, pke2_5: PublicKey);
                {515}in(c_3, m_88: bitstring);
                {516}let (tag2'_3: bitstring,n_11: bitstring,spkI_7: PublicKey) = adec(m_88,ski_1) in
                {517}if (tag2 = tag2'_3) then
                {518}new k2_7: SymmetricKey;
                {519}let m_89: bitstring = aenc((tag3,n_11,k2_7),spkI_7) in
                {520}out(c_3, m_89);
                {521}in(c_3, m_90: bitstring);
                {522}let (tag4'_3: bitstring,a'_11: bitstring,h_pkce_7: bitstring,scope_11: bitstring,u'_7: bitstring,password'_3: bitstring) = dec(m_90,k2_7) in
                {523}if (tag4 = tag4'_3) then
                {524}if (e1_2 = a'_11) then
                {525}if (e2_2 = u'_7) then
                {514}let password_6: bitstring = wrong_pw_3 in
                {526}if (password_6 = password'_3) then
                {527}new code_11: bitstring;
                {528}let m_91: bitstring = enc((tag5,code_11),k2_7) in
                {529}event issuerSendsLastMessageToBrowser(m_88,m_89,m_90,m_91);
                {530}out(c_3, m_91);
                {531}in(c_3, m_92: bitstring);
                {532}let (tag9'_3: bitstring,n2_11: bitstring,spkI2_3: PublicKey) = adec(m_92,ski_1) in
                {533}if (tag9 = tag9'_3) then
                {534}new k3_7: SymmetricKey;
                {535}let m_93: bitstring = aenc((tag10,n2_11,k3_7),spkI2_3) in
                {536}out(c_3, m_93);
                {537}in(c_3, m_94: bitstring);
                {538}let (tag11'_3: bitstring,pksks_3: PublicKey,signature_3: bitstring) = dec(m_94,k3_7) in
                {539}if (tag11 = tag11'_3) then
                {540}let (a''_3: bitstring,jti_7: bitstring,code'_3: bitstring,pkce_7: bitstring) = check(signature_3,pksks_3) in
                {541}if (e1_2 = a''_3) then
                {542}if (code_11 = code'_3) then
                {543}if (h_pkce_7 = hash(pkce_7)) then
                {544}let jtk_7: bitstring = hash_pk(pksks_3) in
                {545}let M_7: bitstring = (jtk_7,jti_7,scope_11,e1_2,i_3,e2_2) in
                {546}let m_95: bitstring = enc((tag12,sign(M_7,ski_1)),k3_7) in
                {547}event issuerSendsLastMessageToApp(m_92,m_93,m_94,m_95);
                {548}out(c_3, m_95);
                {513}let talksOnlyToHonest_11: bool = false in
                {549}if talksOnlyToHonest_11 then
                {550}out(c_3, check_reach_issuer);
                {551}event issuerCompletesProtocol(m_88,m_89,m_90,m_92,m_93,m_94);
                {552}out(ch(code_11), free_code);
                {553}out(ch(password_6), free_password)
)

-- Query not attacker(check_reach_app[]) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 46 rules.
400 rules inserted. Base: 319 rules (96 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 440 rules (122 with conclusion selected). Queue: 79 rules.
800 rules inserted. Base: 538 rules (137 with conclusion selected). Queue: 85 rules.
1000 rules inserted. Base: 567 rules (150 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 631 rules (165 with conclusion selected). Queue: 59 rules.
1400 rules inserted. Base: 710 rules (196 with conclusion selected). Queue: 136 rules.
1600 rules inserted. Base: 800 rules (220 with conclusion selected). Queue: 149 rules.
1800 rules inserted. Base: 855 rules (236 with conclusion selected). Queue: 127 rules.
2000 rules inserted. Base: 942 rules (266 with conclusion selected). Queue: 155 rules.
2200 rules inserted. Base: 1015 rules (291 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1095 rules (318 with conclusion selected). Queue: 151 rules.
2600 rules inserted. Base: 1194 rules (346 with conclusion selected). Queue: 153 rules.
2800 rules inserted. Base: 1288 rules (374 with conclusion selected). Queue: 136 rules.
3000 rules inserted. Base: 1366 rules (392 with conclusion selected). Queue: 111 rules.
3200 rules inserted. Base: 1466 rules (425 with conclusion selected). Queue: 81 rules.
3400 rules inserted. Base: 1537 rules (453 with conclusion selected). Queue: 131 rules.
3600 rules inserted. Base: 1609 rules (464 with conclusion selected). Queue: 142 rules.
3800 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4000 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4200 rules inserted. Base: 1764 rules (469 with conclusion selected). Queue: 311 rules.
4400 rules inserted. Base: 1930 rules (469 with conclusion selected). Queue: 134 rules.
4600 rules inserted. Base: 2002 rules (481 with conclusion selected). Queue: 84 rules.
4800 rules inserted. Base: 2128 rules (517 with conclusion selected). Queue: 46 rules.
Starting query not attacker(check_reach_app[])
goal reachable: attacker(check_reach_app[])

Derivation:
Abbreviations:
pkce_8 = pkce[e2 = i[],e1 = u[],!1 = @sid]
scope_12 = scope[e2 = i[],e1 = u[],!1 = @sid]
n2_12 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_8 = k1[m_6 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
n2_13 = n2[m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
sskI2_4 = sskI2[m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sks_4 = sks[m_10 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
jti_8 = jti[m_10 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]

1. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

2. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

3. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

4. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
So the message (tag1,a[],hash(pkce_8),scope_12) may be sent to the attacker at output {29}.
attacker((tag1,a[],hash(pkce_8),scope_12)).

5. By 4, the attacker may know (tag1,a[],hash(pkce_8),scope_12).
Using the function 3-proj-4-tuple the attacker may obtain hash(pkce_8).
attacker(hash(pkce_8)).

6. By 4, the attacker may know (tag1,a[],hash(pkce_8),scope_12).
Using the function 4-proj-4-tuple the attacker may obtain scope_12.
attacker(scope_12).

7. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

8. By 7, the attacker may know tag1.
By 3, the attacker may know a[].
By 6, the attacker may know scope_12.
By 5, the attacker may know hash(pkce_8).
Using the function 4-tuple the attacker may obtain (tag1,a[],scope_12,hash(pkce_8)).
attacker((tag1,a[],scope_12,hash(pkce_8))).

9. The message a[] that the attacker may have by 3 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 8 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

10. The message a[] that the attacker may have by 3 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 9 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

11. The message a[] that the attacker may have by 3 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 8 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 10 may be received at input {229}.
So the message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)).

12. The message a[] that the attacker may have by 3 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 9 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 11 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

13. The message a[] that the attacker may have by 3 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 8 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 10 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 12 may be received at input {236}.
So the message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_12,pk(sskI_9)),pk(ska[]))).

14. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 13 may be received at input {30}.
So the message aenc((tag7,n_12,k1_8),pk(sskI_9)) may be sent to the attacker at output {36}.
attacker(aenc((tag7,n_12,k1_8),pk(sskI_9))).

15. The message a[] that the attacker may have by 3 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 8 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 10 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 12 may be received at input {236}.
The message aenc((tag7,n_12,k1_8),pk(sskI_9)) that the attacker may have by 14 may be received at input {243}.
So the message enc((tag8,code_12),k1_8) may be sent to the attacker at output {249}.
attacker(enc((tag8,code_12),k1_8)).

16. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 13 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 15 may be received at input {37}.
So the message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) may be sent to the attacker at output {43}.
attacker(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[]))).

17. The message a[] that the attacker may have by 3 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 9 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 11 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 16 may be received at input {400}.
So the message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) may be sent to the attacker at output {405}.
attacker(aenc((tag10,n2_13,k3_8),pk(sskI2_4))).

18. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 13 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 15 may be received at input {37}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 17 may be received at input {44}.
So the message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) may be sent to the attacker at output {53}.
attacker(enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)).

19. The message a[] that the attacker may have by 3 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 9 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 11 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 16 may be received at input {400}.
The message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) that the attacker may have by 18 may be received at input {406}.
So the message enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8) may be sent to the attacker at output {417}.
attacker(enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)).

20. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 13 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 15 may be received at input {37}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 17 may be received at input {44}.
The message enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8) that the attacker may have by 19 may be received at input {54}.
So the message check_reach_app[] may be sent to the attacker at output {66}.
attacker(check_reach_app[]).

21. By 20, attacker(check_reach_app[]).
The goal is reached, represented in the following fact:
attacker(check_reach_app[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, ~M_1) with ~M_1 = u_4 at {22} in copy a_5

in(c, ~M_2) with ~M_2 = i_4 at {23} in copy a_5

new pkce: bitstring creating pkce_8 at {26} in copy a_5

new scope: bitstring creating scope_12 at {27} in copy a_5

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {29} in copy a_5

in(c, ~M) with ~M = a_4 at {217} in copy a_6

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_6

in(c, (tag1,~M,~M_9,~M_8)) with ~M = a_4, ~M_9 = scope_12, ~M_8 = hash(pkce_8) at {221} in copy a_6

new n2_4: bitstring creating n2_12 at {225} in copy a_6

new sskI: SecretKey creating sskI_8 at {226} in copy a_6

out(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_6

in(c, ~M) with ~M = a_4 at {380} in copy a_7

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_7

in(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_7

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_7

out(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_7

in(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_6

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8)) at {234} in copy a_6

out(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8) at {235} in copy a_6

in(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8) at {390} in copy a_7

new code_8: bitstring creating code_12 at {396} in copy a_7

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_7

out(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {399} in copy a_7

in(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {236} in copy a_6

new n_4: bitstring creating n_12 at {239} in copy a_6

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_6

out(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_6

in(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {30} in copy a_5

new k1: SymmetricKey creating k1_8 at {33} in copy a_5

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {35} in copy a_5

out(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {36} in copy a_5

in(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {243} in copy a_6

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8)) at {248} in copy a_6

out(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {249} in copy a_6

out(c, ~M_17) with ~M_17 = check_reach_browser at {251} in copy a_6

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {252} in copy a_6

in(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {37} in copy a_5

new n2: bitstring creating n2_13 at {40} in copy a_5

new sskI2: SecretKey creating sskI2_4 at {41} in copy a_5

out(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)) at {43} in copy a_5

in(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)) at {400} in copy a_7

new k3_4: SymmetricKey creating k3_8 at {403} in copy a_7

out(c, ~M_19) with ~M_19 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)) at {405} in copy a_7

in(c, ~M_19) with ~M_19 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)) at {44} in copy a_5

new sks: SecretKey creating sks_4 at {48} in copy a_5

new jti: bitstring creating jti_8 at {49} in copy a_5

event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {52} in copy a_5

out(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {53} in copy a_5

in(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {406} in copy a_7

event issuerSendsLastMessageToApp(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a_4,i_4,u_4),ski_2)),k3_8)) at {416} in copy a_7

out(c, ~M_21) with ~M_21 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a_4,i_4,u_4),ski_2)),k3_8) at {417} in copy a_7

out(c, ~M_22) with ~M_22 = check_reach_issuer at {419} in copy a_7

event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),scope_12,u_4,password_7),k2_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {420} in copy a_7

in(c, ~M_21) with ~M_21 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a_4,i_4,u_4),ski_2)),k3_8) at {54} in copy a_5

out(c, ~M_23) with ~M_23 = check_reach_app at {66} in copy a_5

event appCompletesProtocol(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a_4,i_4,u_4),ski_2)),k3_8)) at {67} in copy a_5

The attacker has the message ~M_23 = check_reach_app.
A trace has been found.
RESULT not attacker(check_reach_app[]) is false.
-- Query not attacker(check_reach_browser[]) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 46 rules.
400 rules inserted. Base: 319 rules (96 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 440 rules (122 with conclusion selected). Queue: 79 rules.
800 rules inserted. Base: 538 rules (137 with conclusion selected). Queue: 85 rules.
1000 rules inserted. Base: 567 rules (150 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 631 rules (165 with conclusion selected). Queue: 59 rules.
1400 rules inserted. Base: 710 rules (196 with conclusion selected). Queue: 136 rules.
1600 rules inserted. Base: 800 rules (220 with conclusion selected). Queue: 149 rules.
1800 rules inserted. Base: 855 rules (236 with conclusion selected). Queue: 127 rules.
2000 rules inserted. Base: 942 rules (266 with conclusion selected). Queue: 155 rules.
2200 rules inserted. Base: 1015 rules (291 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1095 rules (318 with conclusion selected). Queue: 151 rules.
2600 rules inserted. Base: 1194 rules (346 with conclusion selected). Queue: 153 rules.
2800 rules inserted. Base: 1288 rules (374 with conclusion selected). Queue: 136 rules.
3000 rules inserted. Base: 1366 rules (392 with conclusion selected). Queue: 111 rules.
3200 rules inserted. Base: 1466 rules (425 with conclusion selected). Queue: 81 rules.
3400 rules inserted. Base: 1537 rules (453 with conclusion selected). Queue: 131 rules.
3600 rules inserted. Base: 1609 rules (464 with conclusion selected). Queue: 142 rules.
3800 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4000 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4200 rules inserted. Base: 1764 rules (469 with conclusion selected). Queue: 311 rules.
4400 rules inserted. Base: 1930 rules (469 with conclusion selected). Queue: 134 rules.
4600 rules inserted. Base: 2002 rules (481 with conclusion selected). Queue: 84 rules.
4800 rules inserted. Base: 2128 rules (517 with conclusion selected). Queue: 46 rules.
Starting query not attacker(check_reach_browser[])
goal reachable: attacker(check_reach_browser[])

Derivation:
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pke2_6,pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_2]

1. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

2. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

3. The attacker has some term scope_12.
attacker(scope_12).

4. The attacker has some term h_pkce_8.
attacker(h_pkce_8).

5. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

6. By 5, the attacker may know tag1.
By 1, the attacker may know a[].
By 4, the attacker may know h_pkce_8.
By 3, the attacker may know scope_12.
Using the function 4-tuple the attacker may obtain (tag1,a[],h_pkce_8,scope_12).
attacker((tag1,a[],h_pkce_8,scope_12)).

7. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

8. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 6 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

9. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 7 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 8 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

10. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 6 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 9 may be received at input {229}.
So the message enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8)).

11. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 7 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 8 may be received at input {384}.
The message enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8) that the attacker may have by 10 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

12. The attacker has some term e1_3.
attacker(e1_3).

13. The attacker has some term e2_3.
attacker(e2_3).

14. The attacker has some term pke1_6.
attacker(pke1_6).

15. The attacker has some term pke2_6.
attacker(pke2_6).

16. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 6 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 9 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 11 may be received at input {236}.
So the message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_12,pk(sskI_9)),pk(ska[]))).

17. The message e1_3 that the attacker may have by 12 may be received at input {22}.
The message e2_3 that the attacker may have by 13 may be received at input {23}.
The message pke1_6 that the attacker may have by 14 may be received at input {162}.
The message pke2_6 that the attacker may have by 15 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 16 may be received at input {169}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag7,n_12,k1_8),pk(sskI_9)) may be sent to the attacker at output {175}.
attacker(aenc((tag7,n_12,k1_8),pk(sskI_9))).

18. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 6 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 9 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 11 may be received at input {236}.
The message aenc((tag7,n_12,k1_8),pk(sskI_9)) that the attacker may have by 17 may be received at input {243}.
So the message check_reach_browser[] may be sent to the attacker at output {251}.
attacker(check_reach_browser[]).

19. By 18, attacker(check_reach_browser[]).
The goal is reached, represented in the following fact:
attacker(check_reach_browser[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, a_5) at {22} in copy a_6

in(c, a_7) at {23} in copy a_6

in(c, a_8) at {162} in copy a_6

in(c, a_9) at {163} in copy a_6

new pkce_3: bitstring creating pkce_8 at {165} in copy a_6

new scope_3: bitstring creating scope_12 at {166} in copy a_6

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {168} in copy a_6

in(c, ~M) with ~M = a_4 at {217} in copy a_10

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_10

in(c, (tag1,~M,a_11,a_12)) with ~M = a_4 at {221} in copy a_10

new n2_4: bitstring creating n2_12 at {225} in copy a_10

new sskI: SecretKey creating sskI_8 at {226} in copy a_10

out(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_10

in(c, ~M) with ~M = a_4 at {380} in copy a_13

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_13

in(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_13

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_13

out(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_13

in(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_10

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8)) at {234} in copy a_10

out(c, ~M_12) with ~M_12 = enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8) at {235} in copy a_10

in(c, ~M_12) with ~M_12 = enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8) at {390} in copy a_13

new code_8: bitstring creating code_12 at {396} in copy a_13

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_13

out(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {399} in copy a_13

in(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {236} in copy a_10

new n_4: bitstring creating n_12 at {239} in copy a_10

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_10

out(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_10

in(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {169} in copy a_6

new k1_3: SymmetricKey creating k1_8 at {172} in copy a_6

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {174} in copy a_6

out(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {175} in copy a_6

in(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {243} in copy a_10

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8)) at {248} in copy a_10

out(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {249} in copy a_10

out(c, ~M_17) with ~M_17 = check_reach_browser at {251} in copy a_10

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {252} in copy a_10

The attacker has the message ~M_17 = check_reach_browser.
A trace has been found.
RESULT not attacker(check_reach_browser[]) is false.
-- Query not attacker(check_reach_issuer[]) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 46 rules.
400 rules inserted. Base: 319 rules (96 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 440 rules (122 with conclusion selected). Queue: 79 rules.
800 rules inserted. Base: 538 rules (137 with conclusion selected). Queue: 85 rules.
1000 rules inserted. Base: 567 rules (150 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 631 rules (165 with conclusion selected). Queue: 59 rules.
1400 rules inserted. Base: 710 rules (196 with conclusion selected). Queue: 136 rules.
1600 rules inserted. Base: 800 rules (220 with conclusion selected). Queue: 149 rules.
1800 rules inserted. Base: 855 rules (236 with conclusion selected). Queue: 127 rules.
2000 rules inserted. Base: 942 rules (266 with conclusion selected). Queue: 155 rules.
2200 rules inserted. Base: 1015 rules (291 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1095 rules (318 with conclusion selected). Queue: 151 rules.
2600 rules inserted. Base: 1194 rules (346 with conclusion selected). Queue: 153 rules.
2800 rules inserted. Base: 1288 rules (374 with conclusion selected). Queue: 136 rules.
3000 rules inserted. Base: 1366 rules (392 with conclusion selected). Queue: 111 rules.
3200 rules inserted. Base: 1466 rules (425 with conclusion selected). Queue: 81 rules.
3400 rules inserted. Base: 1537 rules (453 with conclusion selected). Queue: 131 rules.
3600 rules inserted. Base: 1609 rules (464 with conclusion selected). Queue: 142 rules.
3800 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4000 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4200 rules inserted. Base: 1764 rules (469 with conclusion selected). Queue: 311 rules.
4400 rules inserted. Base: 1930 rules (469 with conclusion selected). Queue: 134 rules.
4600 rules inserted. Base: 2002 rules (481 with conclusion selected). Queue: 84 rules.
4800 rules inserted. Base: 2128 rules (517 with conclusion selected). Queue: 46 rules.
Starting query not attacker(check_reach_issuer[])
goal reachable: attacker(check_reach_issuer[])

Derivation:
Abbreviations:
pkce_8 = pkce_1[pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
n2_12 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_8 = k1_1[m_2 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
n2_13 = n2_1[m_4 = enc((tag8,code_12),k1_8),m_2 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
sskI2_4 = sskI2_1[m_4 = enc((tag8,code_12),k1_8),m_2 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sks_4 = sks_1[m_13 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_4 = enc((tag8,code_12),k1_8),m_2 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
jti_8 = jti_1[m_13 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_4 = enc((tag8,code_12),k1_8),m_2 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]
scope_13 = scope_1[pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid]

1. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

2. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

3. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

4. The attacker has some term e1_3.
attacker(e1_3).

5. The attacker has some term pke1_6.
attacker(pke1_6).

6. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message i[] that the attacker may have by 3 may be received at input {23}.
The message pke1_6 that the attacker may have by 5 may be received at input {70}.
We have e1_3 Ôëá u[].
So the message (tag1,a[],hash(pkce_8),scope_13) may be sent to the attacker at output {75}.
attacker((tag1,a[],hash(pkce_8),scope_13)).

7. By 6, the attacker may know (tag1,a[],hash(pkce_8),scope_13).
Using the function 3-proj-4-tuple the attacker may obtain hash(pkce_8).
attacker(hash(pkce_8)).

8. The attacker has some term scope_12.
attacker(scope_12).

9. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

10. By 9, the attacker may know tag1.
By 1, the attacker may know a[].
By 8, the attacker may know scope_12.
By 7, the attacker may know hash(pkce_8).
Using the function 4-tuple the attacker may obtain (tag1,a[],scope_12,hash(pkce_8)).
attacker((tag1,a[],scope_12,hash(pkce_8))).

11. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 10 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

12. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 11 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

13. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 10 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 12 may be received at input {229}.
So the message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)).

14. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 11 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 13 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

15. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 10 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 12 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 14 may be received at input {236}.
So the message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_12,pk(sskI_9)),pk(ska[]))).

16. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message i[] that the attacker may have by 3 may be received at input {23}.
The message pke1_6 that the attacker may have by 5 may be received at input {70}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 15 may be received at input {76}.
We have e1_3 Ôëá u[].
So the message aenc((tag7,n_12,k1_8),pk(sskI_9)) may be sent to the attacker at output {82}.
attacker(aenc((tag7,n_12,k1_8),pk(sskI_9))).

17. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 10 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 12 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 14 may be received at input {236}.
The message aenc((tag7,n_12,k1_8),pk(sskI_9)) that the attacker may have by 16 may be received at input {243}.
So the message enc((tag8,code_12),k1_8) may be sent to the attacker at output {249}.
attacker(enc((tag8,code_12),k1_8)).

18. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message i[] that the attacker may have by 3 may be received at input {23}.
The message pke1_6 that the attacker may have by 5 may be received at input {70}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 15 may be received at input {76}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 17 may be received at input {83}.
We have e1_3 Ôëá u[].
So the message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) may be sent to the attacker at output {89}.
attacker(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[]))).

19. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 11 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 13 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 18 may be received at input {400}.
So the message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) may be sent to the attacker at output {405}.
attacker(aenc((tag10,n2_13,k3_8),pk(sskI2_4))).

20. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message i[] that the attacker may have by 3 may be received at input {23}.
The message pke1_6 that the attacker may have by 5 may be received at input {70}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 15 may be received at input {76}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 17 may be received at input {83}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 19 may be received at input {90}.
We have e1_3 Ôëá u[].
So the message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) may be sent to the attacker at output {99}.
attacker(enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)).

21. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 11 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 13 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 18 may be received at input {400}.
The message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) that the attacker may have by 20 may be received at input {406}.
So the message check_reach_issuer[] may be sent to the attacker at output {419}.
attacker(check_reach_issuer[]).

22. By 21, attacker(check_reach_issuer[]).
The goal is reached, represented in the following fact:
attacker(check_reach_issuer[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, a_5) at {22} in copy a_6

in(c, ~M_2) with ~M_2 = i_4 at {23} in copy a_6

in(c, a_7) at {70} in copy a_6

new pkce_1: bitstring creating pkce_8 at {72} in copy a_6

new scope_1: bitstring creating scope_12 at {73} in copy a_6

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {75} in copy a_6

in(c, ~M) with ~M = a_4 at {217} in copy a_8

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_8

in(c, (tag1,~M,a_9,~M_8)) with ~M = a_4, ~M_8 = hash(pkce_8) at {221} in copy a_8

new n2_4: bitstring creating n2_12 at {225} in copy a_8

new sskI: SecretKey creating sskI_8 at {226} in copy a_8

out(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_8

in(c, ~M) with ~M = a_4 at {380} in copy a_10

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_10

in(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_10

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_10

out(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_10

in(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_8

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8)) at {234} in copy a_8

out(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8) at {235} in copy a_8

in(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8) at {390} in copy a_10

new code_8: bitstring creating code_12 at {396} in copy a_10

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_10

out(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {399} in copy a_10

in(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {236} in copy a_8

new n_4: bitstring creating n_12 at {239} in copy a_8

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_8

out(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_8

in(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {76} in copy a_6

new k1_1: SymmetricKey creating k1_8 at {79} in copy a_6

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {81} in copy a_6

out(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {82} in copy a_6

in(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {243} in copy a_8

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8)) at {248} in copy a_8

out(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {249} in copy a_8

out(c, ~M_17) with ~M_17 = check_reach_browser at {251} in copy a_8

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {252} in copy a_8

in(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {83} in copy a_6

new n2_1: bitstring creating n2_13 at {86} in copy a_6

new sskI2_1: SecretKey creating sskI2_4 at {87} in copy a_6

out(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)) at {89} in copy a_6

in(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)) at {400} in copy a_10

new k3_4: SymmetricKey creating k3_8 at {403} in copy a_10

out(c, ~M_19) with ~M_19 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)) at {405} in copy a_10

in(c, ~M_19) with ~M_19 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)) at {90} in copy a_6

new sks_1: SecretKey creating sks_4 at {94} in copy a_6

new jti_1: bitstring creating jti_8 at {95} in copy a_6

event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {98} in copy a_6

out(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {99} in copy a_6

in(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {406} in copy a_10

event issuerSendsLastMessageToApp(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,a_9,a_4,i_4,u_4),ski_2)),k3_8)) at {416} in copy a_10

out(c, ~M_21) with ~M_21 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,a_9,a_4,i_4,u_4),ski_2)),k3_8) at {417} in copy a_10

out(c, ~M_22) with ~M_22 = check_reach_issuer at {419} in copy a_10

event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_9,u_4,password_7),k2_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski_2)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {420} in copy a_10

The attacker has the message ~M_22 = check_reach_issuer.
A trace has been found.
RESULT not attacker(check_reach_issuer[]) is false.
-- Query not attacker(free_code[]) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 46 rules.
400 rules inserted. Base: 319 rules (96 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 440 rules (122 with conclusion selected). Queue: 79 rules.
800 rules inserted. Base: 538 rules (137 with conclusion selected). Queue: 85 rules.
1000 rules inserted. Base: 567 rules (150 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 631 rules (165 with conclusion selected). Queue: 59 rules.
1400 rules inserted. Base: 710 rules (196 with conclusion selected). Queue: 136 rules.
1600 rules inserted. Base: 800 rules (220 with conclusion selected). Queue: 149 rules.
1800 rules inserted. Base: 855 rules (236 with conclusion selected). Queue: 127 rules.
2000 rules inserted. Base: 942 rules (266 with conclusion selected). Queue: 155 rules.
2200 rules inserted. Base: 1015 rules (291 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1095 rules (318 with conclusion selected). Queue: 151 rules.
2600 rules inserted. Base: 1194 rules (346 with conclusion selected). Queue: 153 rules.
2800 rules inserted. Base: 1288 rules (374 with conclusion selected). Queue: 136 rules.
3000 rules inserted. Base: 1366 rules (392 with conclusion selected). Queue: 111 rules.
3200 rules inserted. Base: 1466 rules (425 with conclusion selected). Queue: 81 rules.
3400 rules inserted. Base: 1537 rules (453 with conclusion selected). Queue: 131 rules.
3600 rules inserted. Base: 1609 rules (464 with conclusion selected). Queue: 142 rules.
3800 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4000 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4200 rules inserted. Base: 1764 rules (469 with conclusion selected). Queue: 311 rules.
4400 rules inserted. Base: 1930 rules (469 with conclusion selected). Queue: 134 rules.
4600 rules inserted. Base: 2002 rules (481 with conclusion selected). Queue: 84 rules.
4800 rules inserted. Base: 2128 rules (517 with conclusion selected). Queue: 46 rules.
Starting query not attacker(free_code[])
goal reachable: attacker(sk) && attacker(pk(sk)) -> attacker(free_code[])

Derivation:
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pke2_6,pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_2]
k1_9 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]
n2_13 = n2_3[m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]
sskI2_4 = sskI2_3[m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]
jti_8 = jti_3[m_29 = aenc((tag10,n2_13,symk),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]
pkce_8 = pkce_3[pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]
sks_4 = sks_3[m_29 = aenc((tag10,n2_13,symk),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_7,e2 = e2_4,e1 = e1_4,!1 = @sid_3]

1. The attacker has some term symk.
attacker(symk).

2. The attacker has some term e1_4.
attacker(e1_4).

3. The attacker has some term e2_4.
attacker(e2_4).

4. The attacker has some term pke1_7.
attacker(pke1_7).

5. We assume as hypothesis that
attacker(pk(sk)).

6. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

7. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

8. The attacker has some term scope_12.
attacker(scope_12).

9. The attacker has some term h_pkce_8.
attacker(h_pkce_8).

10. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

11. By 10, the attacker may know tag1.
By 6, the attacker may know a[].
By 9, the attacker may know h_pkce_8.
By 8, the attacker may know scope_12.
Using the function 4-tuple the attacker may obtain (tag1,a[],h_pkce_8,scope_12).
attacker((tag1,a[],h_pkce_8,scope_12)).

12. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

13. The message a[] that the attacker may have by 6 may be received at input {217}.
The message i[] that the attacker may have by 7 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 11 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

14. The message a[] that the attacker may have by 6 may be received at input {380}.
The message u[] that the attacker may have by 12 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

15. The message a[] that the attacker may have by 6 may be received at input {217}.
The message i[] that the attacker may have by 7 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 11 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
So the message enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8)).

16. The message a[] that the attacker may have by 6 may be received at input {380}.
The message u[] that the attacker may have by 12 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
The message enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8) that the attacker may have by 15 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

17. The message a[] that the attacker may have by 6 may be received at input {217}.
The message i[] that the attacker may have by 7 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 11 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 16 may be received at input {236}.
So the message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_12,pk(sskI_9)),pk(ska[]))).

18. The message e1_4 that the attacker may have by 2 may be received at input {22}.
The message e2_4 that the attacker may have by 3 may be received at input {23}.
The message pke1_7 that the attacker may have by 4 may be received at input {162}.
The message pk(sk) that the attacker may have by 5 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 17 may be received at input {169}.
We have e2_4 Ôëá i[] && e1_4 Ôëá u[].
So the message aenc((tag7,n_12,k1_9),pk(sskI_9)) may be sent to the attacker at output {175}.
attacker(aenc((tag7,n_12,k1_9),pk(sskI_9))).

19. The message a[] that the attacker may have by 6 may be received at input {217}.
The message i[] that the attacker may have by 7 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 11 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 16 may be received at input {236}.
The message aenc((tag7,n_12,k1_9),pk(sskI_9)) that the attacker may have by 18 may be received at input {243}.
So the message enc((tag8,code_12),k1_9) may be sent to the attacker at output {249}.
attacker(enc((tag8,code_12),k1_9)).

20. We assume as hypothesis that
attacker(sk).

21. The message e1_4 that the attacker may have by 2 may be received at input {22}.
The message e2_4 that the attacker may have by 3 may be received at input {23}.
The message pke1_7 that the attacker may have by 4 may be received at input {162}.
The message pk(sk) that the attacker may have by 5 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 17 may be received at input {169}.
The message enc((tag8,code_12),k1_9) that the attacker may have by 19 may be received at input {176}.
We have e2_4 Ôëá i[] && e1_4 Ôëá u[].
So the message aenc((tag9,n2_13,pk(sskI2_4)),pk(sk)) may be sent to the attacker at output {182}.
attacker(aenc((tag9,n2_13,pk(sskI2_4)),pk(sk))).

22. By 21, the attacker may know aenc((tag9,n2_13,pk(sskI2_4)),pk(sk)).
By 20, the attacker may know sk.
Using the function adec the attacker may obtain (tag9,n2_13,pk(sskI2_4)).
attacker((tag9,n2_13,pk(sskI2_4))).

23. By 22, the attacker may know (tag9,n2_13,pk(sskI2_4)).
Using the function 3-proj-3-tuple the attacker may obtain pk(sskI2_4).
attacker(pk(sskI2_4)).

24. By 22, the attacker may know (tag9,n2_13,pk(sskI2_4)).
Using the function 2-proj-3-tuple the attacker may obtain n2_13.
attacker(n2_13).

25. Using the function tag10 the attacker may obtain tag10.
attacker(tag10).

26. By 25, the attacker may know tag10.
By 24, the attacker may know n2_13.
By 1, the attacker may know symk.
Using the function 3-tuple the attacker may obtain (tag10,n2_13,symk).
attacker((tag10,n2_13,symk)).

27. By 26, the attacker may know (tag10,n2_13,symk).
By 23, the attacker may know pk(sskI2_4).
Using the function aenc the attacker may obtain aenc((tag10,n2_13,symk),pk(sskI2_4)).
attacker(aenc((tag10,n2_13,symk),pk(sskI2_4))).

28. The message e1_4 that the attacker may have by 2 may be received at input {22}.
The message e2_4 that the attacker may have by 3 may be received at input {23}.
The message pke1_7 that the attacker may have by 4 may be received at input {162}.
The message pk(sk) that the attacker may have by 5 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 17 may be received at input {169}.
The message enc((tag8,code_12),k1_9) that the attacker may have by 19 may be received at input {176}.
The message aenc((tag10,n2_13,symk),pk(sskI2_4)) that the attacker may have by 27 may be received at input {183}.
We have e2_4 Ôëá i[] && e1_4 Ôëá u[].
So the message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),symk) may be sent to the attacker at output {192}.
attacker(enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),symk)).

29. By 28, the attacker may know enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),symk).
By 1, the attacker may know symk.
Using the function dec the attacker may obtain (tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)).
attacker((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4))).

30. By 29, the attacker may know (tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)).
Using the function 3-proj-3-tuple the attacker may obtain sign((a[],jti_8,code_12,pkce_8),sks_4).
attacker(sign((a[],jti_8,code_12,pkce_8),sks_4)).

31. By 30, the attacker may know sign((a[],jti_8,code_12,pkce_8),sks_4).
Using the function getMsg the attacker may obtain (a[],jti_8,code_12,pkce_8).
attacker((a[],jti_8,code_12,pkce_8)).

32. By 31, the attacker may know (a[],jti_8,code_12,pkce_8).
Using the function 3-proj-4-tuple the attacker may obtain code_12.
attacker(code_12).

33. By 32, the attacker may know code_12.
Using the function ch the attacker may obtain ch(code_12).
attacker(ch(code_12)).

34. The attacker has some term e1_3.
attacker(e1_3).

35. The attacker has some term e2_3.
attacker(e2_3).

36. The attacker has some term pke1_6.
attacker(pke1_6).

37. The attacker has some term pke2_6.
attacker(pke2_6).

38. The message e1_3 that the attacker may have by 34 may be received at input {22}.
The message e2_3 that the attacker may have by 35 may be received at input {23}.
The message pke1_6 that the attacker may have by 36 may be received at input {162}.
The message pke2_6 that the attacker may have by 37 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 17 may be received at input {169}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag7,n_12,k1_8),pk(sskI_9)) may be sent to the attacker at output {175}.
attacker(aenc((tag7,n_12,k1_8),pk(sskI_9))).

39. The message a[] that the attacker may have by 6 may be received at input {217}.
The message i[] that the attacker may have by 7 may be received at input {218}.
The message (tag1,a[],h_pkce_8,scope_12) that the attacker may have by 11 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 16 may be received at input {236}.
The message aenc((tag7,n_12,k1_8),pk(sskI_9)) that the attacker may have by 38 may be received at input {243}.
So the message free_code[] may be sent on channel ch(code_12) at output {253}.
mess(ch(code_12),free_code[]).

40. By 33, the attacker may have the channel ch(code_12).
By 39, the message free_code[] may be sent on this channel.
So the attacker may obtain the message free_code[] by listening on this channel.
attacker(free_code[]).

41. By 40, attacker(free_code[]).
The goal is reached, represented in the following fact:
attacker(free_code[]).


Unified pke2_6 with pk(sk)
Unified pke1_7 with pke1_6
Unified e2_4 with e2_3
Unified e1_4 with e1_3
Unified @sid_3 with @sid_2
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(sk) && attacker(pk(sk)) -> attacker(free_code[])
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, a_5) at {22} in copy a_6

in(c, a_7) at {23} in copy a_6

in(c, a_8) at {162} in copy a_6

in(c, pk(a_9)) at {163} in copy a_6

new pkce_3: bitstring creating pkce_8 at {165} in copy a_6

new scope_3: bitstring creating scope_12 at {166} in copy a_6

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {168} in copy a_6

in(c, ~M) with ~M = a_4 at {217} in copy a_10

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_10

in(c, (tag1,~M,a_11,a_12)) with ~M = a_4 at {221} in copy a_10

new n2_4: bitstring creating n2_12 at {225} in copy a_10

new sskI: SecretKey creating sskI_8 at {226} in copy a_10

out(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_10

in(c, ~M) with ~M = a_4 at {380} in copy a_13

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_13

in(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_13

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_13

out(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_13

in(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_10

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8)) at {234} in copy a_10

out(c, ~M_12) with ~M_12 = enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8) at {235} in copy a_10

in(c, ~M_12) with ~M_12 = enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8) at {390} in copy a_13

new code_8: bitstring creating code_12 at {396} in copy a_13

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_13

out(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {399} in copy a_13

in(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {236} in copy a_10

new n_4: bitstring creating n_12 at {239} in copy a_10

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_10

out(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_10

in(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {169} in copy a_6

new k1_3: SymmetricKey creating k1_8 at {172} in copy a_6

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {174} in copy a_6

out(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {175} in copy a_6

in(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {243} in copy a_10

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8)) at {248} in copy a_10

out(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {249} in copy a_10

out(c, ~M_17) with ~M_17 = check_reach_browser at {251} in copy a_10

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,a_12,a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {252} in copy a_10

in(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {176} in copy a_6

new n2_3: bitstring creating n2_13 at {179} in copy a_6

new sskI2_3: SecretKey creating sskI2_4 at {180} in copy a_6

out(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)) at {182} in copy a_6

in(c, aenc((tag10,2-proj-3-tuple(adec(~M_18,a_9)),a_14),3-proj-3-tuple(adec(~M_18,a_9)))) with aenc((tag10,2-proj-3-tuple(adec(~M_18,a_9)),a_14),3-proj-3-tuple(adec(~M_18,a_9))) = aenc((tag10,n2_13,a_14),pk(sskI2_4)) at {183} in copy a_6

new sks_3: SecretKey creating sks_4 at {187} in copy a_6

new jti_3: bitstring creating jti_8 at {188} in copy a_6

event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)),aenc((tag10,n2_13,a_14),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),a_14)) at {191} in copy a_6

out(c, ~M_19) with ~M_19 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),a_14) at {192} in copy a_6

out(ch(code_12), ~M_20) with ~M_20 = free_code at {253} in copy a_10

The attacker has the message ~M_20 = free_code.
A trace has been found.
RESULT not attacker(free_code[]) is false.
-- Query not attacker(free_password[]) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 46 rules.
400 rules inserted. Base: 319 rules (96 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 440 rules (122 with conclusion selected). Queue: 79 rules.
800 rules inserted. Base: 538 rules (137 with conclusion selected). Queue: 85 rules.
1000 rules inserted. Base: 567 rules (150 with conclusion selected). Queue: 85 rules.
1200 rules inserted. Base: 631 rules (165 with conclusion selected). Queue: 59 rules.
1400 rules inserted. Base: 710 rules (196 with conclusion selected). Queue: 136 rules.
1600 rules inserted. Base: 800 rules (220 with conclusion selected). Queue: 149 rules.
1800 rules inserted. Base: 855 rules (236 with conclusion selected). Queue: 127 rules.
2000 rules inserted. Base: 942 rules (266 with conclusion selected). Queue: 155 rules.
2200 rules inserted. Base: 1015 rules (291 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1095 rules (318 with conclusion selected). Queue: 151 rules.
2600 rules inserted. Base: 1194 rules (346 with conclusion selected). Queue: 153 rules.
2800 rules inserted. Base: 1288 rules (374 with conclusion selected). Queue: 136 rules.
3000 rules inserted. Base: 1366 rules (392 with conclusion selected). Queue: 111 rules.
3200 rules inserted. Base: 1466 rules (425 with conclusion selected). Queue: 81 rules.
3400 rules inserted. Base: 1537 rules (453 with conclusion selected). Queue: 131 rules.
3600 rules inserted. Base: 1609 rules (464 with conclusion selected). Queue: 142 rules.
3800 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4000 rules inserted. Base: 1662 rules (468 with conclusion selected). Queue: 384 rules.
4200 rules inserted. Base: 1764 rules (469 with conclusion selected). Queue: 311 rules.
4400 rules inserted. Base: 1930 rules (469 with conclusion selected). Queue: 134 rules.
4600 rules inserted. Base: 2002 rules (481 with conclusion selected). Queue: 84 rules.
4800 rules inserted. Base: 2128 rules (517 with conclusion selected). Queue: 46 rules.
Starting query not attacker(free_password[])
RESULT not attacker(free_password[]) is true.
-- Query inj-event(appCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101,m_102)) ==> inj-event(browserSendsLastMessageToApp(m_96,m_97,m_98)) && inj-event(issuerSendsLastMessageToApp(m_99,m_100,m_101,m_102)) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 171 rules (53 with conclusion selected). Queue: 51 rules.
400 rules inserted. Base: 326 rules (90 with conclusion selected). Queue: 90 rules.
600 rules inserted. Base: 445 rules (118 with conclusion selected). Queue: 95 rules.
800 rules inserted. Base: 550 rules (135 with conclusion selected). Queue: 87 rules.
1000 rules inserted. Base: 579 rules (149 with conclusion selected). Queue: 104 rules.
1200 rules inserted. Base: 651 rules (163 with conclusion selected). Queue: 73 rules.
1400 rules inserted. Base: 720 rules (189 with conclusion selected). Queue: 104 rules.
1600 rules inserted. Base: 814 rules (217 with conclusion selected). Queue: 169 rules.
1800 rules inserted. Base: 895 rules (231 with conclusion selected). Queue: 138 rules.
2000 rules inserted. Base: 967 rules (254 with conclusion selected). Queue: 159 rules.
2200 rules inserted. Base: 1053 rules (280 with conclusion selected). Queue: 215 rules.
2400 rules inserted. Base: 1138 rules (303 with conclusion selected). Queue: 185 rules.
2600 rules inserted. Base: 1228 rules (332 with conclusion selected). Queue: 193 rules.
2800 rules inserted. Base: 1332 rules (352 with conclusion selected). Queue: 194 rules.
3000 rules inserted. Base: 1428 rules (372 with conclusion selected). Queue: 173 rules.
3200 rules inserted. Base: 1528 rules (393 with conclusion selected). Queue: 169 rules.
3400 rules inserted. Base: 1619 rules (409 with conclusion selected). Queue: 127 rules.
3600 rules inserted. Base: 1714 rules (442 with conclusion selected). Queue: 166 rules.
3800 rules inserted. Base: 1779 rules (465 with conclusion selected). Queue: 171 rules.
4000 rules inserted. Base: 1853 rules (479 with conclusion selected). Queue: 205 rules.
4200 rules inserted. Base: 1918 rules (485 with conclusion selected). Queue: 892 rules.
4400 rules inserted. Base: 1984 rules (488 with conclusion selected). Queue: 855 rules.
4600 rules inserted. Base: 1984 rules (488 with conclusion selected). Queue: 855 rules.
4800 rules inserted. Base: 1984 rules (488 with conclusion selected). Queue: 855 rules.
5000 rules inserted. Base: 1982 rules (488 with conclusion selected). Queue: 855 rules.
5200 rules inserted. Base: 2012 rules (489 with conclusion selected). Queue: 876 rules.
5400 rules inserted. Base: 2147 rules (489 with conclusion selected). Queue: 731 rules.
5600 rules inserted. Base: 2311 rules (489 with conclusion selected). Queue: 556 rules.
5800 rules inserted. Base: 2479 rules (489 with conclusion selected). Queue: 376 rules.
6000 rules inserted. Base: 2623 rules (491 with conclusion selected). Queue: 254 rules.
6200 rules inserted. Base: 2678 rules (507 with conclusion selected). Queue: 830 rules.
6400 rules inserted. Base: 2716 rules (507 with conclusion selected). Queue: 792 rules.
6600 rules inserted. Base: 2716 rules (507 with conclusion selected). Queue: 792 rules.
6800 rules inserted. Base: 2716 rules (507 with conclusion selected). Queue: 792 rules.
7000 rules inserted. Base: 2761 rules (539 with conclusion selected). Queue: 790 rules.
7200 rules inserted. Base: 2896 rules (543 with conclusion selected). Queue: 657 rules.
7400 rules inserted. Base: 3059 rules (543 with conclusion selected). Queue: 483 rules.
7600 rules inserted. Base: 3228 rules (543 with conclusion selected). Queue: 303 rules.
7800 rules inserted. Base: 3399 rules (578 with conclusion selected). Queue: 174 rules.
8000 rules inserted. Base: 3474 rules (609 with conclusion selected). Queue: 153 rules.
8200 rules inserted. Base: 3566 rules (662 with conclusion selected). Queue: 122 rules.
8400 rules inserted. Base: 3704 rules (740 with conclusion selected). Queue: 71 rules.
8600 rules inserted. Base: 3739 rules (797 with conclusion selected). Queue: 17 rules.
Starting query inj-event(appCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101,m_102)) ==> inj-event(browserSendsLastMessageToApp(m_96,m_97,m_98)) && inj-event(issuerSendsLastMessageToApp(m_99,m_100,m_101,m_102))
goal reachable: e2_3 Ôëá i[] && e1_3 Ôëá u[] && begin(issuerSendsLastMessageToApp(aenc((tag9,n2_12,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_12,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)),@occ416_1) && attacker(sk) && begin(browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8)),enc((tag8,code_12),k1_8)),@occ248_1) && attacker(pk(sk)) && attacker(pke1_6) && attacker(e2_3) && attacker(e1_3) && attacker(sk_1) && attacker(n_13) && attacker(pk(sk_1)) -> end(@occ67_1,appCompletesProtocol(aenc((tag6,n_13,pk(sk_1)),pk(ska[])),aenc((tag7,n_13,k1_9),pk(sk_1)),enc((tag8,code_12),k1_9),aenc((tag9,n2_12,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_12,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)))
Abbreviations:
pkce_8 = pkce[e2 = i[],e1 = u[],!1 = @sid]
scope_12 = scope[e2 = i[],e1 = u[],!1 = @sid]
n2_13 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_13,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_13,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
k1_9 = k1[m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
n2_12 = n2[m_8 = enc((tag8,code_12),k1_9),m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
sskI2_4 = sskI2[m_8 = enc((tag8,code_12),k1_9),m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_12,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_13,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sks_4 = sks[m_10 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_9),m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
jti_8 = jti[m_10 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_9),m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
@occ67_1 = @occ67[m_12 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8),m_10 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_9),m_6 = aenc((tag6,n_13,pk(sk_1)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
@occ416_1 = @occ416[m_70 = enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),m_68 = aenc((tag9,n2_12,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_13,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_13,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_13,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
@occ248_1 = @occ248[m_38 = aenc((tag7,n_12,k1_8),pk(sskI_8)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_13,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]

Derivation:
Abbreviations:
pkce_8 = pkce[e2 = i[],e1 = u[],!1 = @sid]
scope_12 = scope[e2 = i[],e1 = u[],!1 = @sid]
n2_12 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
k1_8 = k1[m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
n2_13 = n2[m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
sskI2_4 = sskI2[m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sks_4 = sks[m_10 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
jti_8 = jti[m_10 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
@occ67_1 = @occ67[m_12 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8),m_10 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_8 = enc((tag8,code_12),k1_8),m_6 = aenc((tag6,n_12,pk(sk)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid]
@occ416_1 = @occ416[m_70 = enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),m_68 = aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_13 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_9 = k1_3[m_25 = aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
n2_14 = n2_3[m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
sskI2_5 = sskI2_3[m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
jti_9 = jti_3[m_29 = aenc((tag10,n2_14,symk),pk(sskI2_5)),m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
pkce_9 = pkce_3[pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
sks_5 = sks_3[m_29 = aenc((tag10,n2_14,symk),pk(sskI2_5)),m_27 = enc((tag8,code_12),k1_9),m_25 = aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk_1),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_3]
@occ248_1 = @occ248[m_38 = aenc((tag7,n_13,k1_9),pk(sskI_9)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]

1. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

2. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

3. The message pk(ska[]) may be sent to the attacker at output {10}.
attacker(pk(ska[])).

4. We assume as hypothesis that
attacker(pk(sk)).

5. We assume as hypothesis that
attacker(n_12).

6. Using the function tag6 the attacker may obtain tag6.
attacker(tag6).

7. By 6, the attacker may know tag6.
By 5, the attacker may know n_12.
By 4, the attacker may know pk(sk).
Using the function 3-tuple the attacker may obtain (tag6,n_12,pk(sk)).
attacker((tag6,n_12,pk(sk))).

8. By 7, the attacker may know (tag6,n_12,pk(sk)).
By 3, the attacker may know pk(ska[]).
Using the function aenc the attacker may obtain aenc((tag6,n_12,pk(sk)),pk(ska[])).
attacker(aenc((tag6,n_12,pk(sk)),pk(ska[]))).

9. We assume as hypothesis that
attacker(sk).

10. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sk)),pk(ska[])) that the attacker may have by 8 may be received at input {30}.
So the message aenc((tag7,n_12,k1_8),pk(sk)) may be sent to the attacker at output {36}.
attacker(aenc((tag7,n_12,k1_8),pk(sk))).

11. By 10, the attacker may know aenc((tag7,n_12,k1_8),pk(sk)).
By 9, the attacker may know sk.
Using the function adec the attacker may obtain (tag7,n_12,k1_8).
attacker((tag7,n_12,k1_8)).

12. By 11, the attacker may know (tag7,n_12,k1_8).
Using the function 3-proj-3-tuple the attacker may obtain k1_8.
attacker(k1_8).

13. The attacker has some term symk.
attacker(symk).

14. We assume as hypothesis that
attacker(e1_3).

15. We assume as hypothesis that
attacker(e2_3).

16. We assume as hypothesis that
attacker(pke1_6).

17. We assume as hypothesis that
attacker(pk(sk_1)).

18. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

19. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
So the message (tag1,a[],hash(pkce_8),scope_12) may be sent to the attacker at output {29}.
attacker((tag1,a[],hash(pkce_8),scope_12)).

20. By 19, the attacker may know (tag1,a[],hash(pkce_8),scope_12).
Using the function 3-proj-4-tuple the attacker may obtain hash(pkce_8).
attacker(hash(pkce_8)).

21. By 19, the attacker may know (tag1,a[],hash(pkce_8),scope_12).
Using the function 4-proj-4-tuple the attacker may obtain scope_12.
attacker(scope_12).

22. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

23. By 22, the attacker may know tag1.
By 18, the attacker may know a[].
By 21, the attacker may know scope_12.
By 20, the attacker may know hash(pkce_8).
Using the function 4-tuple the attacker may obtain (tag1,a[],scope_12,hash(pkce_8)).
attacker((tag1,a[],scope_12,hash(pkce_8))).

24. The message a[] that the attacker may have by 18 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 23 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

25. The message a[] that the attacker may have by 18 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 24 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

26. The message a[] that the attacker may have by 18 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 23 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 25 may be received at input {229}.
So the message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)).

27. The message a[] that the attacker may have by 18 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 24 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 26 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

28. The message a[] that the attacker may have by 18 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 23 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 25 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 27 may be received at input {236}.
So the message aenc((tag6,n_13,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_13,pk(sskI_9)),pk(ska[]))).

29. The message e1_3 that the attacker may have by 14 may be received at input {22}.
The message e2_3 that the attacker may have by 15 may be received at input {23}.
The message pke1_6 that the attacker may have by 16 may be received at input {162}.
The message pk(sk_1) that the attacker may have by 17 may be received at input {163}.
The message aenc((tag6,n_13,pk(sskI_9)),pk(ska[])) that the attacker may have by 28 may be received at input {169}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag7,n_13,k1_9),pk(sskI_9)) may be sent to the attacker at output {175}.
attacker(aenc((tag7,n_13,k1_9),pk(sskI_9))).

30. The message a[] that the attacker may have by 18 may be received at input {217}.
The message i[] that the attacker may have by 2 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 23 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 25 may be received at input {229}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 27 may be received at input {236}.
The message aenc((tag7,n_13,k1_9),pk(sskI_9)) that the attacker may have by 29 may be received at input {243}.
The event browserSendsLastMessageToApp(aenc((tag6,n_13,pk(sskI_9)),pk(ska[])),aenc((tag7,n_13,k1_9),pk(sskI_9)),enc((tag8,code_12),k1_9)) (with occurrence name @occ248_1) may be executed at {248}.
So the message enc((tag8,code_12),k1_9) may be sent to the attacker at output {249}.
attacker(enc((tag8,code_12),k1_9)).

31. We assume as hypothesis that
attacker(sk_1).

32. The message e1_3 that the attacker may have by 14 may be received at input {22}.
The message e2_3 that the attacker may have by 15 may be received at input {23}.
The message pke1_6 that the attacker may have by 16 may be received at input {162}.
The message pk(sk_1) that the attacker may have by 17 may be received at input {163}.
The message aenc((tag6,n_13,pk(sskI_9)),pk(ska[])) that the attacker may have by 28 may be received at input {169}.
The message enc((tag8,code_12),k1_9) that the attacker may have by 30 may be received at input {176}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag9,n2_14,pk(sskI2_5)),pk(sk_1)) may be sent to the attacker at output {182}.
attacker(aenc((tag9,n2_14,pk(sskI2_5)),pk(sk_1))).

33. By 32, the attacker may know aenc((tag9,n2_14,pk(sskI2_5)),pk(sk_1)).
By 31, the attacker may know sk_1.
Using the function adec the attacker may obtain (tag9,n2_14,pk(sskI2_5)).
attacker((tag9,n2_14,pk(sskI2_5))).

34. By 33, the attacker may know (tag9,n2_14,pk(sskI2_5)).
Using the function 3-proj-3-tuple the attacker may obtain pk(sskI2_5).
attacker(pk(sskI2_5)).

35. By 33, the attacker may know (tag9,n2_14,pk(sskI2_5)).
Using the function 2-proj-3-tuple the attacker may obtain n2_14.
attacker(n2_14).

36. Using the function tag10 the attacker may obtain tag10.
attacker(tag10).

37. By 36, the attacker may know tag10.
By 35, the attacker may know n2_14.
By 13, the attacker may know symk.
Using the function 3-tuple the attacker may obtain (tag10,n2_14,symk).
attacker((tag10,n2_14,symk)).

38. By 37, the attacker may know (tag10,n2_14,symk).
By 34, the attacker may know pk(sskI2_5).
Using the function aenc the attacker may obtain aenc((tag10,n2_14,symk),pk(sskI2_5)).
attacker(aenc((tag10,n2_14,symk),pk(sskI2_5))).

39. The message e1_3 that the attacker may have by 14 may be received at input {22}.
The message e2_3 that the attacker may have by 15 may be received at input {23}.
The message pke1_6 that the attacker may have by 16 may be received at input {162}.
The message pk(sk_1) that the attacker may have by 17 may be received at input {163}.
The message aenc((tag6,n_13,pk(sskI_9)),pk(ska[])) that the attacker may have by 28 may be received at input {169}.
The message enc((tag8,code_12),k1_9) that the attacker may have by 30 may be received at input {176}.
The message aenc((tag10,n2_14,symk),pk(sskI2_5)) that the attacker may have by 38 may be received at input {183}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message enc((tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5)),symk) may be sent to the attacker at output {192}.
attacker(enc((tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5)),symk)).

40. By 39, the attacker may know enc((tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5)),symk).
By 13, the attacker may know symk.
Using the function dec the attacker may obtain (tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5)).
attacker((tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5))).

41. By 40, the attacker may know (tag11,pk(sks_5),sign((a[],jti_9,code_12,pkce_9),sks_5)).
Using the function 3-proj-3-tuple the attacker may obtain sign((a[],jti_9,code_12,pkce_9),sks_5).
attacker(sign((a[],jti_9,code_12,pkce_9),sks_5)).

42. By 41, the attacker may know sign((a[],jti_9,code_12,pkce_9),sks_5).
Using the function getMsg the attacker may obtain (a[],jti_9,code_12,pkce_9).
attacker((a[],jti_9,code_12,pkce_9)).

43. By 42, the attacker may know (a[],jti_9,code_12,pkce_9).
Using the function 3-proj-4-tuple the attacker may obtain code_12.
attacker(code_12).

44. Using the function tag8 the attacker may obtain tag8.
attacker(tag8).

45. By 44, the attacker may know tag8.
By 43, the attacker may know code_12.
Using the function 2-tuple the attacker may obtain (tag8,code_12).
attacker((tag8,code_12)).

46. By 45, the attacker may know (tag8,code_12).
By 12, the attacker may know k1_8.
Using the function enc the attacker may obtain enc((tag8,code_12),k1_8).
attacker(enc((tag8,code_12),k1_8)).

47. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sk)),pk(ska[])) that the attacker may have by 8 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 46 may be received at input {37}.
So the message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) may be sent to the attacker at output {43}.
attacker(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[]))).

48. The message a[] that the attacker may have by 18 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 24 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 26 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 47 may be received at input {400}.
So the message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) may be sent to the attacker at output {405}.
attacker(aenc((tag10,n2_13,k3_8),pk(sskI2_4))).

49. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sk)),pk(ska[])) that the attacker may have by 8 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 46 may be received at input {37}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 48 may be received at input {44}.
So the message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) may be sent to the attacker at output {53}.
attacker(enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)).

50. The message a[] that the attacker may have by 18 may be received at input {380}.
The message u[] that the attacker may have by 1 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 24 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 26 may be received at input {390}.
The message aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])) that the attacker may have by 47 may be received at input {400}.
The message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) that the attacker may have by 49 may be received at input {406}.
The event issuerSendsLastMessageToApp(aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)) (with occurrence name @occ416_1) may be executed at {416}.
So the message enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8) may be sent to the attacker at output {417}.
attacker(enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)).

51. The message u[] that the attacker may have by 1 may be received at input {22}.
The message i[] that the attacker may have by 2 may be received at input {23}.
The message aenc((tag6,n_12,pk(sk)),pk(ska[])) that the attacker may have by 8 may be received at input {30}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 46 may be received at input {37}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 48 may be received at input {44}.
The message enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8) that the attacker may have by 50 may be received at input {54}.
So event appCompletesProtocol(aenc((tag6,n_12,pk(sk)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sk)),enc((tag8,code_12),k1_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8)) may be executed at {67} in session @sid.
end(@occ67_1,appCompletesProtocol(aenc((tag6,n_12,pk(sk)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sk)),enc((tag8,code_12),k1_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8))).

52. By 51, end(@occ67_1,appCompletesProtocol(aenc((tag6,n_12,pk(sk)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sk)),enc((tag8,code_12),k1_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8))).
The goal is reached, represented in the following fact:
end(@occ67_1,appCompletesProtocol(aenc((tag6,n_12,pk(sk)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sk)),enc((tag8,code_12),k1_8),aenc((tag9,n2_13,pk(sskI2_4)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,scope_12,a[],i[],u[]),ski[])),k3_8))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, a_5) at {22} in copy a_6

in(c, a_7) at {23} in copy a_6

in(c, a_8) at {162} in copy a_6

in(c, pk(a_9)) at {163} in copy a_6

new pkce_3: bitstring creating pkce_8 at {165} in copy a_6

new scope_3: bitstring creating scope_12 at {166} in copy a_6

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {168} in copy a_6

in(c, ~M_1) with ~M_1 = u_4 at {22} in copy a_10

in(c, ~M_2) with ~M_2 = i_4 at {23} in copy a_10

new pkce: bitstring creating pkce_9 at {26} in copy a_10

new scope: bitstring creating scope_13 at {27} in copy a_10

out(c, (~M_10,~M_11,~M_12,~M_13)) with ~M_10 = tag1, ~M_11 = a_4, ~M_12 = hash(pkce_9), ~M_13 = scope_13 at {29} in copy a_10

in(c, aenc((tag6,a_11,pk(a_12)),~M_3)) with aenc((tag6,a_11,pk(a_12)),~M_3) = aenc((tag6,a_11,pk(a_12)),pk(ska_2)) at {30} in copy a_10

new k1: SymmetricKey creating k1_8 at {33} in copy a_10

event appSendsLastMessageToBrowser(aenc((tag6,a_11,pk(a_12)),pk(ska_2)),aenc((tag7,a_11,k1_8),pk(a_12))) at {35} in copy a_10

out(c, ~M_14) with ~M_14 = aenc((tag7,a_11,k1_8),pk(a_12)) at {36} in copy a_10

in(c, ~M) with ~M = a_4 at {217} in copy a_13

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_13

in(c, (tag1,~M,~M_13,~M_12)) with ~M = a_4, ~M_13 = scope_13, ~M_12 = hash(pkce_9) at {221} in copy a_13

new n2_4: bitstring creating n2_12 at {225} in copy a_13

new sskI: SecretKey creating sskI_8 at {226} in copy a_13

out(c, ~M_15) with ~M_15 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_13

in(c, ~M) with ~M = a_4 at {380} in copy a_14

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_14

in(c, ~M_15) with ~M_15 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_14

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_14

out(c, ~M_16) with ~M_16 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_14

in(c, ~M_16) with ~M_16 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_13

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8)) at {234} in copy a_13

out(c, ~M_17) with ~M_17 = enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8) at {235} in copy a_13

in(c, ~M_17) with ~M_17 = enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8) at {390} in copy a_14

new code_8: bitstring creating code_12 at {396} in copy a_14

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_14

out(c, ~M_18) with ~M_18 = enc((tag5,code_12),k2_8) at {399} in copy a_14

in(c, ~M_18) with ~M_18 = enc((tag5,code_12),k2_8) at {236} in copy a_13

new n_4: bitstring creating n_12 at {239} in copy a_13

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_13

out(c, ~M_19) with ~M_19 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_13

in(c, ~M_19) with ~M_19 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {169} in copy a_6

new k1_3: SymmetricKey creating k1_9 at {172} in copy a_6

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_9),pk(sskI_9))) at {174} in copy a_6

out(c, ~M_20) with ~M_20 = aenc((tag7,n_12,k1_9),pk(sskI_9)) at {175} in copy a_6

in(c, ~M_20) with ~M_20 = aenc((tag7,n_12,k1_9),pk(sskI_9)) at {243} in copy a_13

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_9),pk(sskI_9)),enc((tag8,code_12),k1_9)) at {248} in copy a_13

out(c, ~M_21) with ~M_21 = enc((tag8,code_12),k1_9) at {249} in copy a_13

out(c, ~M_22) with ~M_22 = check_reach_browser at {251} in copy a_13

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_9),pk(sskI_9))) at {252} in copy a_13

in(c, ~M_21) with ~M_21 = enc((tag8,code_12),k1_9) at {176} in copy a_6

new n2_3: bitstring creating n2_13 at {179} in copy a_6

new sskI2_3: SecretKey creating sskI2_4 at {180} in copy a_6

out(c, ~M_23) with ~M_23 = aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)) at {182} in copy a_6

in(c, aenc((tag10,2-proj-3-tuple(adec(~M_23,a_9)),a_15),3-proj-3-tuple(adec(~M_23,a_9)))) with aenc((tag10,2-proj-3-tuple(adec(~M_23,a_9)),a_15),3-proj-3-tuple(adec(~M_23,a_9))) = aenc((tag10,n2_13,a_15),pk(sskI2_4)) at {183} in copy a_6

new sks_3: SecretKey creating sks_4 at {187} in copy a_6

new jti_3: bitstring creating jti_8 at {188} in copy a_6

event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)),aenc((tag10,n2_13,a_15),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),a_15)) at {191} in copy a_6

out(c, ~M_24) with ~M_24 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),a_15) at {192} in copy a_6

in(c, enc((tag8,3-proj-4-tuple(getMsg(3-proj-3-tuple(dec(~M_24,a_15))))),3-proj-3-tuple(adec(~M_14,a_12)))) with enc((tag8,3-proj-4-tuple(getMsg(3-proj-3-tuple(dec(~M_24,a_15))))),3-proj-3-tuple(adec(~M_14,a_12))) = enc((tag8,code_12),k1_8) at {37} in copy a_10

new n2: bitstring creating n2_14 at {40} in copy a_10

new sskI2: SecretKey creating sskI2_5 at {41} in copy a_10

out(c, ~M_25) with ~M_25 = aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)) at {43} in copy a_10

in(c, ~M_25) with ~M_25 = aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)) at {400} in copy a_14

new k3_4: SymmetricKey creating k3_8 at {403} in copy a_14

out(c, ~M_26) with ~M_26 = aenc((tag10,n2_14,k3_8),pk(sskI2_5)) at {405} in copy a_14

in(c, ~M_26) with ~M_26 = aenc((tag10,n2_14,k3_8),pk(sskI2_5)) at {44} in copy a_10

new sks: SecretKey creating sks_5 at {48} in copy a_10

new jti: bitstring creating jti_9 at {49} in copy a_10

event appSendsLastMessageToIssuer(aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)),aenc((tag10,n2_14,k3_8),pk(sskI2_5)),enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8)) at {52} in copy a_10

out(c, ~M_27) with ~M_27 = enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8) at {53} in copy a_10

in(c, ~M_27) with ~M_27 = enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8) at {406} in copy a_14

event issuerSendsLastMessageToApp(aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)),aenc((tag10,n2_14,k3_8),pk(sskI2_5)),enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8),enc((tag12,sign((hash_pk(pk(sks_5)),jti_9,scope_13,a_4,i_4,u_4),ski_2)),k3_8)) at {416} in copy a_14

out(c, ~M_28) with ~M_28 = enc((tag12,sign((hash_pk(pk(sks_5)),jti_9,scope_13,a_4,i_4,u_4),ski_2)),k3_8) at {417} in copy a_14

out(c, ~M_29) with ~M_29 = check_reach_issuer at {419} in copy a_14

event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_9),scope_13,u_4,password_7),k2_8),aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)),aenc((tag10,n2_14,k3_8),pk(sskI2_5)),enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8)) at {420} in copy a_14

in(c, ~M_28) with ~M_28 = enc((tag12,sign((hash_pk(pk(sks_5)),jti_9,scope_13,a_4,i_4,u_4),ski_2)),k3_8) at {54} in copy a_10

out(c, ~M_30) with ~M_30 = check_reach_app at {66} in copy a_10

event appCompletesProtocol(aenc((tag6,a_11,pk(a_12)),pk(ska_2)),aenc((tag7,a_11,k1_8),pk(a_12)),enc((tag8,code_12),k1_8),aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)),aenc((tag10,n2_14,k3_8),pk(sskI2_5)),enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8),enc((tag12,sign((hash_pk(pk(sks_5)),jti_9,scope_13,a_4,i_4,u_4),ski_2)),k3_8)) at {67} in copy a_10 (goal)

The event appCompletesProtocol(aenc((tag6,a_11,pk(a_12)),pk(ska_2)),aenc((tag7,a_11,k1_8),pk(a_12)),enc((tag8,code_12),k1_8),aenc((tag9,n2_14,pk(sskI2_5)),pk(ski_2)),aenc((tag10,n2_14,k3_8),pk(sskI2_5)),enc((tag11,pk(sks_5),sign((a_4,jti_9,code_12,pkce_9),sks_5)),k3_8),enc((tag12,sign((hash_pk(pk(sks_5)),jti_9,scope_13,a_4,i_4,u_4),ski_2)),k3_8)) is executed at {67} in copy a_10.
A trace has been found.
RESULT inj-event(appCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101,m_102)) ==> inj-event(browserSendsLastMessageToApp(m_96,m_97,m_98)) && inj-event(issuerSendsLastMessageToApp(m_99,m_100,m_101,m_102)) is false.
RESULT (even event(appCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101,m_102)) ==> event(browserSendsLastMessageToApp(m_96,m_97,m_98)) && event(issuerSendsLastMessageToApp(m_99,m_100,m_101,m_102)) is false.)
-- Query inj-event(browserCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToBrowser(m_100,m_101)) && inj-event(issuerSendsLastMessageToBrowser(m_96,m_97,m_98,m_99)) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 49 rules.
400 rules inserted. Base: 322 rules (94 with conclusion selected). Queue: 94 rules.
600 rules inserted. Base: 441 rules (121 with conclusion selected). Queue: 89 rules.
800 rules inserted. Base: 547 rules (136 with conclusion selected). Queue: 77 rules.
1000 rules inserted. Base: 567 rules (149 with conclusion selected). Queue: 97 rules.
1200 rules inserted. Base: 642 rules (164 with conclusion selected). Queue: 70 rules.
1400 rules inserted. Base: 723 rules (190 with conclusion selected). Queue: 110 rules.
1600 rules inserted. Base: 811 rules (219 with conclusion selected). Queue: 180 rules.
1800 rules inserted. Base: 891 rules (232 with conclusion selected). Queue: 152 rules.
2000 rules inserted. Base: 962 rules (253 with conclusion selected). Queue: 168 rules.
2200 rules inserted. Base: 1051 rules (279 with conclusion selected). Queue: 219 rules.
2400 rules inserted. Base: 1137 rules (308 with conclusion selected). Queue: 198 rules.
2600 rules inserted. Base: 1227 rules (335 with conclusion selected). Queue: 190 rules.
2800 rules inserted. Base: 1332 rules (356 with conclusion selected). Queue: 207 rules.
3000 rules inserted. Base: 1432 rules (379 with conclusion selected). Queue: 171 rules.
3200 rules inserted. Base: 1534 rules (398 with conclusion selected). Queue: 166 rules.
3400 rules inserted. Base: 1620 rules (417 with conclusion selected). Queue: 135 rules.
3600 rules inserted. Base: 1724 rules (445 with conclusion selected). Queue: 96 rules.
3800 rules inserted. Base: 1794 rules (473 with conclusion selected). Queue: 175 rules.
4000 rules inserted. Base: 1857 rules (485 with conclusion selected). Queue: 203 rules.
4200 rules inserted. Base: 1937 rules (493 with conclusion selected). Queue: 841 rules.
4400 rules inserted. Base: 1999 rules (498 with conclusion selected). Queue: 819 rules.
4600 rules inserted. Base: 1999 rules (498 with conclusion selected). Queue: 819 rules.
4800 rules inserted. Base: 1999 rules (498 with conclusion selected). Queue: 819 rules.
5000 rules inserted. Base: 1997 rules (498 with conclusion selected). Queue: 819 rules.
5200 rules inserted. Base: 2038 rules (499 with conclusion selected). Queue: 829 rules.
5400 rules inserted. Base: 2192 rules (499 with conclusion selected). Queue: 665 rules.
5600 rules inserted. Base: 2358 rules (499 with conclusion selected). Queue: 488 rules.
5800 rules inserted. Base: 2529 rules (499 with conclusion selected). Queue: 306 rules.
6000 rules inserted. Base: 2627 rules (500 with conclusion selected). Queue: 570 rules.
6200 rules inserted. Base: 2699 rules (516 with conclusion selected). Queue: 768 rules.
6400 rules inserted. Base: 2699 rules (516 with conclusion selected). Queue: 768 rules.
6600 rules inserted. Base: 2699 rules (516 with conclusion selected). Queue: 768 rules.
6800 rules inserted. Base: 2697 rules (516 with conclusion selected). Queue: 768 rules.
7000 rules inserted. Base: 2794 rules (550 with conclusion selected). Queue: 709 rules.
7200 rules inserted. Base: 2956 rules (550 with conclusion selected). Queue: 536 rules.
7400 rules inserted. Base: 3118 rules (550 with conclusion selected). Queue: 363 rules.
7600 rules inserted. Base: 3293 rules (550 with conclusion selected). Queue: 178 rules.
7800 rules inserted. Base: 3386 rules (609 with conclusion selected). Queue: 145 rules.
8000 rules inserted. Base: 3475 rules (649 with conclusion selected). Queue: 114 rules.
8200 rules inserted. Base: 3628 rules (741 with conclusion selected). Queue: 56 rules.
Starting query inj-event(browserCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToBrowser(m_100,m_101)) && inj-event(issuerSendsLastMessageToBrowser(m_96,m_97,m_98,m_99))
goal reachable: e2_3 Ôëá i[] && e1_3 Ôëá u[] && begin(appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))),@occ174_1) && attacker(pke2_6) && attacker(pke1_6) && attacker(e2_3) && attacker(e1_3) && begin(issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8)),@occ398_1) && attacker(h_pkce_8) && attacker(scope_12) -> end(@occ252_1,browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))))
The 1st, 6th hypotheses occur strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 7th, 8th hypotheses occur before the conclusion.
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pke2_6,pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_2]
@occ252_1 = @occ252[m_38 = aenc((tag7,n_12,k1_8),pk(sskI_8)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
@occ174_1 = @occ174[m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pke2_6,pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid_2]
@occ398_1 = @occ398[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
goal reachable: e2_3 Ôëá i[] && begin(appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))),@occ127_1) && attacker(pke2_6) && attacker(e2_3) && begin(issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8)),@occ398_1) && attacker(h_pkce_8) && attacker(scope_12) -> end(@occ252_1,browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))))
The 1st, 4th hypotheses occur strictly before the conclusion.
The 2nd, 3rd, 5th, 6th hypotheses occur before the conclusion.
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1_2[m_17 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2 = pke2_6,e2 = e2_3,e1 = u[],!1 = @sid_2]
@occ252_1 = @occ252[m_38 = aenc((tag7,n_12,k1_8),pk(sskI_8)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
@occ127_1 = @occ127[m_17 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2 = pke2_6,e2 = e2_3,e1 = u[],!1 = @sid_2]
@occ398_1 = @occ398[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
goal reachable: e1_3 Ôëá u[] && begin(appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))),@occ81_1) && attacker(pke1_6) && attacker(e1_3) && begin(issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8)),@occ398_1) && attacker(h_pkce_8) && attacker(scope_12) -> end(@occ252_1,browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))))
The 1st, 4th hypotheses occur strictly before the conclusion.
The 2nd, 3rd, 5th, 6th hypotheses occur before the conclusion.
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1_1[m_2 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid_2]
@occ252_1 = @occ252[m_38 = aenc((tag7,n_12,k1_8),pk(sskI_8)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
@occ81_1 = @occ81[m_2 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke1 = pke1_6,e2 = i[],e1 = e1_3,!1 = @sid_2]
@occ398_1 = @occ398[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
goal reachable: begin(appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))),@occ35_1) && begin(issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8)),@occ398_1) && attacker(h_pkce_8) && attacker(scope_12) -> end(@occ252_1,browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_9)),enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),aenc((tag7,n_12,k1_8),pk(sskI_8))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th hypotheses occur before the conclusion.
Abbreviations:
n2_12 = n2_4[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_9 = sskI[m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
code_12 = code_8[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
k1_8 = k1[m_6 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid_2]
@occ252_1 = @occ252[m_38 = aenc((tag7,n_12,k1_8),pk(sskI_8)),m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_9)),m_32 = (tag1,a[],h_pkce_8,scope_12),e2_1 = i[],e1_1 = a[],!1 = @sid]
@occ35_1 = @occ35[m_6 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),e2 = i[],e1 = u[],!1 = @sid_2]
@occ398_1 = @occ398[m_66 = enc((tag4,a[],scope_12,h_pkce_8,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_1]
RESULT inj-event(browserCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToBrowser(m_100,m_101)) && inj-event(issuerSendsLastMessageToBrowser(m_96,m_97,m_98,m_99)) is true.
-- Query inj-event(issuerCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToIssuer(m_99,m_100,m_101)) && inj-event(browserSendsLastMessageToIssuer(m_96,m_97,m_98)) in process 1.
Translating the process into Horn clauses...
Completing...
select attacker(pk(sk))/-5000
200 rules inserted. Base: 170 rules (53 with conclusion selected). Queue: 50 rules.
400 rules inserted. Base: 325 rules (91 with conclusion selected). Queue: 94 rules.
600 rules inserted. Base: 442 rules (118 with conclusion selected). Queue: 100 rules.
800 rules inserted. Base: 548 rules (135 with conclusion selected). Queue: 100 rules.
1000 rules inserted. Base: 591 rules (148 with conclusion selected). Queue: 109 rules.
1200 rules inserted. Base: 653 rules (160 with conclusion selected). Queue: 84 rules.
1400 rules inserted. Base: 729 rules (187 with conclusion selected). Queue: 108 rules.
1600 rules inserted. Base: 825 rules (212 with conclusion selected). Queue: 174 rules.
1800 rules inserted. Base: 908 rules (228 with conclusion selected). Queue: 143 rules.
2000 rules inserted. Base: 980 rules (247 with conclusion selected). Queue: 165 rules.
2200 rules inserted. Base: 1067 rules (272 with conclusion selected). Queue: 197 rules.
2400 rules inserted. Base: 1172 rules (297 with conclusion selected). Queue: 198 rules.
2600 rules inserted. Base: 1252 rules (322 with conclusion selected). Queue: 202 rules.
2800 rules inserted. Base: 1348 rules (343 with conclusion selected). Queue: 219 rules.
3000 rules inserted. Base: 1453 rules (361 with conclusion selected). Queue: 190 rules.
3200 rules inserted. Base: 1563 rules (383 with conclusion selected). Queue: 169 rules.
3400 rules inserted. Base: 1656 rules (402 with conclusion selected). Queue: 157 rules.
3600 rules inserted. Base: 1739 rules (431 with conclusion selected). Queue: 128 rules.
3800 rules inserted. Base: 1849 rules (453 with conclusion selected). Queue: 201 rules.
4000 rules inserted. Base: 1890 rules (474 with conclusion selected). Queue: 221 rules.
4200 rules inserted. Base: 1931 rules (483 with conclusion selected). Queue: 295 rules.
4400 rules inserted. Base: 1990 rules (493 with conclusion selected). Queue: 488 rules.
4600 rules inserted. Base: 2082 rules (498 with conclusion selected). Queue: 1290 rules.
4800 rules inserted. Base: 2136 rules (498 with conclusion selected). Queue: 1235 rules.
5000 rules inserted. Base: 2136 rules (498 with conclusion selected). Queue: 1235 rules.
5200 rules inserted. Base: 2136 rules (498 with conclusion selected). Queue: 1235 rules.
5400 rules inserted. Base: 2136 rules (498 with conclusion selected). Queue: 1235 rules.
5600 rules inserted. Base: 2136 rules (498 with conclusion selected). Queue: 1235 rules.
5800 rules inserted. Base: 2148 rules (498 with conclusion selected). Queue: 1211 rules.
6000 rules inserted. Base: 2166 rules (499 with conclusion selected). Queue: 1253 rules.
6200 rules inserted. Base: 2282 rules (499 with conclusion selected). Queue: 1095 rules.
6400 rules inserted. Base: 2400 rules (499 with conclusion selected). Queue: 917 rules.
6600 rules inserted. Base: 2547 rules (499 with conclusion selected). Queue: 744 rules.
6800 rules inserted. Base: 2682 rules (499 with conclusion selected). Queue: 565 rules.
7000 rules inserted. Base: 2839 rules (500 with conclusion selected). Queue: 385 rules.
7200 rules inserted. Base: 2912 rules (501 with conclusion selected). Queue: 795 rules.
7400 rules inserted. Base: 2964 rules (525 with conclusion selected). Queue: 1215 rules.
7600 rules inserted. Base: 3018 rules (525 with conclusion selected). Queue: 1160 rules.
7800 rules inserted. Base: 3018 rules (525 with conclusion selected). Queue: 1160 rules.
8000 rules inserted. Base: 3018 rules (525 with conclusion selected). Queue: 1160 rules.
8200 rules inserted. Base: 3018 rules (525 with conclusion selected). Queue: 1160 rules.
8400 rules inserted. Base: 3017 rules (525 with conclusion selected). Queue: 1160 rules.
8600 rules inserted. Base: 3081 rules (575 with conclusion selected). Queue: 1118 rules.
8800 rules inserted. Base: 3184 rules (578 with conclusion selected). Queue: 974 rules.
9000 rules inserted. Base: 3299 rules (578 with conclusion selected). Queue: 800 rules.
9200 rules inserted. Base: 3446 rules (578 with conclusion selected). Queue: 626 rules.
9400 rules inserted. Base: 3596 rules (578 with conclusion selected). Queue: 449 rules.
9600 rules inserted. Base: 3741 rules (578 with conclusion selected). Queue: 262 rules.
9800 rules inserted. Base: 3856 rules (655 with conclusion selected). Queue: 197 rules.
10000 rules inserted. Base: 3943 rules (699 with conclusion selected). Queue: 164 rules.
10200 rules inserted. Base: 4037 rules (770 with conclusion selected). Queue: 102 rules.
10400 rules inserted. Base: 4141 rules (843 with conclusion selected). Queue: 46 rules.
Starting query inj-event(issuerCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToIssuer(m_99,m_100,m_101)) && inj-event(browserSendsLastMessageToIssuer(m_96,m_97,m_98))
goal reachable: e2_3 Ôëá i[] && e1_3 Ôëá u[] && begin(appSendsLastMessageToIssuer(aenc((tag9,n2_12,pk(sskI2_4)),pk(sk)),aenc((tag10,n2_12,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)),@occ191_1) && attacker(sk_1) && attacker(sk) && begin(@p_act(@occ243_1,aenc((tag7,n_12,k1_8),pk(sskI_8)))) && begin(@p_act(@occ236_1,enc((tag5,code_12),k2_8))) && attacker(n2_13) && attacker(pk(sk_1)) && begin(browserSendsLastMessageToIssuer(aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_14,k2_8),pk(sskI_9)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)),@occ234_1) && attacker(scope_12) && attacker(pk(sk)) && attacker(pke1_6) && attacker(e2_3) && attacker(e1_3) -> end(@occ420_1,issuerCompletesProtocol(aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),aenc((tag3,n2_14,k2_8),pk(sskI_9)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),aenc((tag9,n2_13,pk(sk_1)),pk(ski[])),aenc((tag10,n2_13,k3_8),pk(sk_1)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)))
Abbreviations:
pkce_8 = pkce_3[pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
n2_14 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_14,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_14,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
n2_12 = n2_3[m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_13,pk(sk_1)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sskI2_4 = sskI2_3[m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
sks_4 = sks_3[m_29 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
jti_8 = jti_3[m_29 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
@occ420_1 = @occ420[m_70 = enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),m_68 = aenc((tag9,n2_13,pk(sk_1)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_14,pk(sskI_9)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
@occ191_1 = @occ191[m_29 = aenc((tag10,n2_12,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_8)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
@occ243_1 = @occ243[!1 = @sid_1]
@occ236_1 = @occ236[!1 = @sid_1]
@occ234_1 = @occ234[m_34 = aenc((tag3,n2_14,k2_8),pk(sskI_9)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]

Derivation:
Abbreviations:
pkce_8 = pkce_3[pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
n2_12 = n2_4[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_8 = sskI[m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k2_8 = k2_4[m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
code_12 = code_8[m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
n_12 = n_4[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
sskI_9 = sskI_1[m_36 = enc((tag5,code_12),k2_8),m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
k1_8 = k1_3[m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
n2_13 = n2_3[m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
k3_8 = k3_4[m_68 = aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
sskI2_4 = sskI2_3[m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
sks_4 = sks_3[m_29 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
jti_8 = jti_3[m_29 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
@occ420_1 = @occ420[m_70 = enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8),m_68 = aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),m_66 = enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),m_64 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),e2_2 = u[],e1_2 = a[],!1 = @sid_2]
@occ191_1 = @occ191[m_29 = aenc((tag10,n2_13,k3_8),pk(sskI2_4)),m_27 = enc((tag8,code_12),k1_8),m_25 = aenc((tag6,n_12,pk(sskI_9)),pk(ska[])),pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]
@occ243_1 = @occ243[!1 = @sid_1]
@occ236_1 = @occ236[!1 = @sid_1]
@occ234_1 = @occ234[m_34 = aenc((tag3,n2_12,k2_8),pk(sskI_8)),m_32 = (tag1,a[],scope_12,hash(pkce_8)),e2_1 = i[],e1_1 = a[],!1 = @sid_1]
scope_13 = scope_3[pke2_1 = pk(sk),pke1_1 = pke1_6,e2 = e2_3,e1 = e1_3,!1 = @sid]

1. The message a[] may be sent to the attacker at output {4}.
attacker(a[]).

2. The message u[] may be sent to the attacker at output {5}.
attacker(u[]).

3. The message i[] may be sent to the attacker at output {6}.
attacker(i[]).

4. We assume as hypothesis that
attacker(e1_3).

5. We assume as hypothesis that
attacker(e2_3).

6. We assume as hypothesis that
attacker(pke1_6).

7. We assume as hypothesis that
attacker(pk(sk)).

8. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message e2_3 that the attacker may have by 5 may be received at input {23}.
The message pke1_6 that the attacker may have by 6 may be received at input {162}.
The message pk(sk) that the attacker may have by 7 may be received at input {163}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message (tag1,a[],hash(pkce_8),scope_13) may be sent to the attacker at output {168}.
attacker((tag1,a[],hash(pkce_8),scope_13)).

9. By 8, the attacker may know (tag1,a[],hash(pkce_8),scope_13).
Using the function 3-proj-4-tuple the attacker may obtain hash(pkce_8).
attacker(hash(pkce_8)).

10. We assume as hypothesis that
attacker(scope_12).

11. Using the function tag1 the attacker may obtain tag1.
attacker(tag1).

12. By 11, the attacker may know tag1.
By 1, the attacker may know a[].
By 10, the attacker may know scope_12.
By 9, the attacker may know hash(pkce_8).
Using the function 4-tuple the attacker may obtain (tag1,a[],scope_12,hash(pkce_8)).
attacker((tag1,a[],scope_12,hash(pkce_8))).

13. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 12 may be received at input {221}.
So the message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) may be sent to the attacker at output {228}.
attacker(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[]))).

14. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
So the message aenc((tag3,n2_12,k2_8),pk(sskI_8)) may be sent to the attacker at output {389}.
attacker(aenc((tag3,n2_12,k2_8),pk(sskI_8))).

15. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 12 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)) (with occurrence name @occ234_1) may be executed at {234}.
So the message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) may be sent to the attacker at output {235}.
attacker(enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)).

16. The message pk(ski[]) may be sent to the attacker at output {12}.
attacker(pk(ski[])).

17. We assume as hypothesis that
attacker(pk(sk_1)).

18. We assume as hypothesis that
attacker(n2_14).

19. Using the function tag9 the attacker may obtain tag9.
attacker(tag9).

20. By 19, the attacker may know tag9.
By 18, the attacker may know n2_14.
By 17, the attacker may know pk(sk_1).
Using the function 3-tuple the attacker may obtain (tag9,n2_14,pk(sk_1)).
attacker((tag9,n2_14,pk(sk_1))).

21. By 20, the attacker may know (tag9,n2_14,pk(sk_1)).
By 16, the attacker may know pk(ski[]).
Using the function aenc the attacker may obtain aenc((tag9,n2_14,pk(sk_1)),pk(ski[])).
attacker(aenc((tag9,n2_14,pk(sk_1)),pk(ski[]))).

22. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 15 may be received at input {390}.
So the message enc((tag5,code_12),k2_8) may be sent to the attacker at output {399}.
attacker(enc((tag5,code_12),k2_8)).

23. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 12 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)) (with occurrence name @occ234_1) may be executed at {234}.
The event @p_act(@occ236_1,enc((tag5,code_12),k2_8)) records how variables are instantiated at {236}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 22 may be received at input {236}.
So the message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) may be sent to the attacker at output {242}.
attacker(aenc((tag6,n_12,pk(sskI_9)),pk(ska[]))).

24. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message e2_3 that the attacker may have by 5 may be received at input {23}.
The message pke1_6 that the attacker may have by 6 may be received at input {162}.
The message pk(sk) that the attacker may have by 7 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 23 may be received at input {169}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag7,n_12,k1_8),pk(sskI_9)) may be sent to the attacker at output {175}.
attacker(aenc((tag7,n_12,k1_8),pk(sskI_9))).

25. The message a[] that the attacker may have by 1 may be received at input {217}.
The message i[] that the attacker may have by 3 may be received at input {218}.
The message (tag1,a[],scope_12,hash(pkce_8)) that the attacker may have by 12 may be received at input {221}.
The message aenc((tag3,n2_12,k2_8),pk(sskI_8)) that the attacker may have by 14 may be received at input {229}.
The event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8)) (with occurrence name @occ234_1) may be executed at {234}.
The event @p_act(@occ236_1,enc((tag5,code_12),k2_8)) records how variables are instantiated at {236}.
The message enc((tag5,code_12),k2_8) that the attacker may have by 22 may be received at input {236}.
The event @p_act(@occ243_1,aenc((tag7,n_12,k1_8),pk(sskI_9))) records how variables are instantiated at {243}.
The message aenc((tag7,n_12,k1_8),pk(sskI_9)) that the attacker may have by 24 may be received at input {243}.
So the message enc((tag8,code_12),k1_8) may be sent to the attacker at output {249}.
attacker(enc((tag8,code_12),k1_8)).

26. We assume as hypothesis that
attacker(sk).

27. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message e2_3 that the attacker may have by 5 may be received at input {23}.
The message pke1_6 that the attacker may have by 6 may be received at input {162}.
The message pk(sk) that the attacker may have by 7 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 23 may be received at input {169}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 25 may be received at input {176}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message aenc((tag9,n2_13,pk(sskI2_4)),pk(sk)) may be sent to the attacker at output {182}.
attacker(aenc((tag9,n2_13,pk(sskI2_4)),pk(sk))).

28. By 27, the attacker may know aenc((tag9,n2_13,pk(sskI2_4)),pk(sk)).
By 26, the attacker may know sk.
Using the function adec the attacker may obtain (tag9,n2_13,pk(sskI2_4)).
attacker((tag9,n2_13,pk(sskI2_4))).

29. By 28, the attacker may know (tag9,n2_13,pk(sskI2_4)).
Using the function 3-proj-3-tuple the attacker may obtain pk(sskI2_4).
attacker(pk(sskI2_4)).

30. We assume as hypothesis that
attacker(sk_1).

31. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 15 may be received at input {390}.
The message aenc((tag9,n2_14,pk(sk_1)),pk(ski[])) that the attacker may have by 21 may be received at input {400}.
So the message aenc((tag10,n2_14,k3_8),pk(sk_1)) may be sent to the attacker at output {405}.
attacker(aenc((tag10,n2_14,k3_8),pk(sk_1))).

32. By 31, the attacker may know aenc((tag10,n2_14,k3_8),pk(sk_1)).
By 30, the attacker may know sk_1.
Using the function adec the attacker may obtain (tag10,n2_14,k3_8).
attacker((tag10,n2_14,k3_8)).

33. By 32, the attacker may know (tag10,n2_14,k3_8).
Using the function 3-proj-3-tuple the attacker may obtain k3_8.
attacker(k3_8).

34. By 28, the attacker may know (tag9,n2_13,pk(sskI2_4)).
Using the function 2-proj-3-tuple the attacker may obtain n2_13.
attacker(n2_13).

35. Using the function tag10 the attacker may obtain tag10.
attacker(tag10).

36. By 35, the attacker may know tag10.
By 34, the attacker may know n2_13.
By 33, the attacker may know k3_8.
Using the function 3-tuple the attacker may obtain (tag10,n2_13,k3_8).
attacker((tag10,n2_13,k3_8)).

37. By 36, the attacker may know (tag10,n2_13,k3_8).
By 29, the attacker may know pk(sskI2_4).
Using the function aenc the attacker may obtain aenc((tag10,n2_13,k3_8),pk(sskI2_4)).
attacker(aenc((tag10,n2_13,k3_8),pk(sskI2_4))).

38. The message e1_3 that the attacker may have by 4 may be received at input {22}.
The message e2_3 that the attacker may have by 5 may be received at input {23}.
The message pke1_6 that the attacker may have by 6 may be received at input {162}.
The message pk(sk) that the attacker may have by 7 may be received at input {163}.
The message aenc((tag6,n_12,pk(sskI_9)),pk(ska[])) that the attacker may have by 23 may be received at input {169}.
The message enc((tag8,code_12),k1_8) that the attacker may have by 25 may be received at input {176}.
The message aenc((tag10,n2_13,k3_8),pk(sskI2_4)) that the attacker may have by 37 may be received at input {183}.
The event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(sk)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)) (with occurrence name @occ191_1) may be executed at {191}.
We have e2_3 Ôëá i[] && e1_3 Ôëá u[].
So the message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) may be sent to the attacker at output {192}.
attacker(enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)).

39. The message a[] that the attacker may have by 1 may be received at input {380}.
The message u[] that the attacker may have by 2 may be received at input {381}.
The message aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])) that the attacker may have by 13 may be received at input {384}.
The message enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8) that the attacker may have by 15 may be received at input {390}.
The message aenc((tag9,n2_14,pk(sk_1)),pk(ski[])) that the attacker may have by 21 may be received at input {400}.
The message enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8) that the attacker may have by 38 may be received at input {406}.
So event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),aenc((tag10,n2_14,k3_8),pk(sk_1)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8)) may be executed at {420} in session @sid_2.
end(@occ420_1,issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),aenc((tag10,n2_14,k3_8),pk(sk_1)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8))).

40. By 39, end(@occ420_1,issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),aenc((tag10,n2_14,k3_8),pk(sk_1)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8))).
The goal is reached, represented in the following fact:
end(@occ420_1,issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski[])),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a[],hash(pkce_8),scope_12,u[],password[]),k2_8),aenc((tag9,n2_14,pk(sk_1)),pk(ski[])),aenc((tag10,n2_14,k3_8),pk(sk_1)),enc((tag11,pk(sks_4),sign((a[],jti_8,code_12,pkce_8),sks_4)),k3_8))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new a: bitstring creating a_4 at {1}

new u: bitstring creating u_4 at {2}

new i: bitstring creating i_4 at {3}

out(c, ~M) with ~M = a_4 at {4}

out(c, ~M_1) with ~M_1 = u_4 at {5}

out(c, ~M_2) with ~M_2 = i_4 at {6}

new ska: SecretKey creating ska_2 at {7}

new sku: SecretKey creating sku_2 at {8}

new ski: SecretKey creating ski_2 at {9}

out(c, ~M_3) with ~M_3 = pk(ska_2) at {10}

out(c, ~M_4) with ~M_4 = pk(sku_2) at {11}

out(c, ~M_5) with ~M_5 = pk(ski_2) at {12}

new password: bitstring creating password_7 at {13}

in(c, a_5) at {22} in copy a_6

in(c, a_7) at {23} in copy a_6

in(c, a_8) at {162} in copy a_6

in(c, pk(a_9)) at {163} in copy a_6

new pkce_3: bitstring creating pkce_8 at {165} in copy a_6

new scope_3: bitstring creating scope_12 at {166} in copy a_6

out(c, (~M_6,~M_7,~M_8,~M_9)) with ~M_6 = tag1, ~M_7 = a_4, ~M_8 = hash(pkce_8), ~M_9 = scope_12 at {168} in copy a_6

in(c, ~M) with ~M = a_4 at {217} in copy a_10

in(c, ~M_2) with ~M_2 = i_4 at {218} in copy a_10

in(c, (tag1,~M,a_11,~M_8)) with ~M = a_4, ~M_8 = hash(pkce_8) at {221} in copy a_10

new n2_4: bitstring creating n2_12 at {225} in copy a_10

new sskI: SecretKey creating sskI_8 at {226} in copy a_10

out(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {228} in copy a_10

in(c, ~M) with ~M = a_4 at {380} in copy a_12

in(c, ~M_1) with ~M_1 = u_4 at {381} in copy a_12

in(c, ~M_10) with ~M_10 = aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)) at {384} in copy a_12

new k2_4: SymmetricKey creating k2_8 at {387} in copy a_12

out(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {389} in copy a_12

in(c, ~M_11) with ~M_11 = aenc((tag3,n2_12,k2_8),pk(sskI_8)) at {229} in copy a_10

event browserSendsLastMessageToIssuer(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8)) at {234} in copy a_10

out(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8) at {235} in copy a_10

in(c, ~M_12) with ~M_12 = enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8) at {390} in copy a_12

new code_8: bitstring creating code_12 at {396} in copy a_12

event issuerSendsLastMessageToBrowser(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8)) at {398} in copy a_12

out(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {399} in copy a_12

in(c, ~M_13) with ~M_13 = enc((tag5,code_12),k2_8) at {236} in copy a_10

new n_4: bitstring creating n_12 at {239} in copy a_10

new sskI_1: SecretKey creating sskI_9 at {240} in copy a_10

out(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {242} in copy a_10

in(c, ~M_14) with ~M_14 = aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)) at {169} in copy a_6

new k1_3: SymmetricKey creating k1_8 at {172} in copy a_6

event appSendsLastMessageToBrowser(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {174} in copy a_6

out(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {175} in copy a_6

in(c, ~M_15) with ~M_15 = aenc((tag7,n_12,k1_8),pk(sskI_9)) at {243} in copy a_10

event browserSendsLastMessageToApp(aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9)),enc((tag8,code_12),k1_8)) at {248} in copy a_10

out(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {249} in copy a_10

out(c, ~M_17) with ~M_17 = check_reach_browser at {251} in copy a_10

event browserCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8),enc((tag5,code_12),k2_8),aenc((tag6,n_12,pk(sskI_9)),pk(ska_2)),aenc((tag7,n_12,k1_8),pk(sskI_9))) at {252} in copy a_10

in(c, ~M_16) with ~M_16 = enc((tag8,code_12),k1_8) at {176} in copy a_6

new n2_3: bitstring creating n2_13 at {179} in copy a_6

new sskI2_3: SecretKey creating sskI2_4 at {180} in copy a_6

out(c, ~M_18) with ~M_18 = aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)) at {182} in copy a_6

in(c, aenc((tag9,a_13,pk(a_14)),~M_5)) with aenc((tag9,a_13,pk(a_14)),~M_5) = aenc((tag9,a_13,pk(a_14)),pk(ski_2)) at {400} in copy a_12

new k3_4: SymmetricKey creating k3_8 at {403} in copy a_12

out(c, ~M_19) with ~M_19 = aenc((tag10,a_13,k3_8),pk(a_14)) at {405} in copy a_12

in(c, aenc((tag10,2-proj-3-tuple(adec(~M_18,a_9)),3-proj-3-tuple(adec(~M_19,a_14))),3-proj-3-tuple(adec(~M_18,a_9)))) with aenc((tag10,2-proj-3-tuple(adec(~M_18,a_9)),3-proj-3-tuple(adec(~M_19,a_14))),3-proj-3-tuple(adec(~M_18,a_9))) = aenc((tag10,n2_13,k3_8),pk(sskI2_4)) at {183} in copy a_6

new sks_3: SecretKey creating sks_4 at {187} in copy a_6

new jti_3: bitstring creating jti_8 at {188} in copy a_6

event appSendsLastMessageToIssuer(aenc((tag9,n2_13,pk(sskI2_4)),pk(a_9)),aenc((tag10,n2_13,k3_8),pk(sskI2_4)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {191} in copy a_6

out(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {192} in copy a_6

in(c, ~M_20) with ~M_20 = enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8) at {406} in copy a_12

event issuerSendsLastMessageToApp(aenc((tag9,a_13,pk(a_14)),pk(ski_2)),aenc((tag10,a_13,k3_8),pk(a_14)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8),enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,a_11,a_4,i_4,u_4),ski_2)),k3_8)) at {416} in copy a_12

out(c, ~M_21) with ~M_21 = enc((tag12,sign((hash_pk(pk(sks_4)),jti_8,a_11,a_4,i_4,u_4),ski_2)),k3_8) at {417} in copy a_12

out(c, ~M_22) with ~M_22 = check_reach_issuer at {419} in copy a_12

event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8),aenc((tag9,a_13,pk(a_14)),pk(ski_2)),aenc((tag10,a_13,k3_8),pk(a_14)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) at {420} in copy a_12 (goal)

The event issuerCompletesProtocol(aenc((tag2,n2_12,pk(sskI_8)),pk(ski_2)),aenc((tag3,n2_12,k2_8),pk(sskI_8)),enc((tag4,a_4,hash(pkce_8),a_11,u_4,password_7),k2_8),aenc((tag9,a_13,pk(a_14)),pk(ski_2)),aenc((tag10,a_13,k3_8),pk(a_14)),enc((tag11,pk(sks_4),sign((a_4,jti_8,code_12,pkce_8),sks_4)),k3_8)) is executed at {420} in copy a_12.
A trace has been found.
RESULT inj-event(issuerCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToIssuer(m_99,m_100,m_101)) && inj-event(browserSendsLastMessageToIssuer(m_96,m_97,m_98)) is false.
RESULT (even event(issuerCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> event(appSendsLastMessageToIssuer(m_99,m_100,m_101)) && event(browserSendsLastMessageToIssuer(m_96,m_97,m_98)) is false.)

--------------------------------------------------------------
Verification summary:

Query not attacker(check_reach_app[]) is false.

Query not attacker(check_reach_browser[]) is false.

Query not attacker(check_reach_issuer[]) is false.

Query not attacker(free_code[]) is false.

Query not attacker(free_password[]) is true.

Query inj-event(appCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101,m_102)) ==> inj-event(browserSendsLastMessageToApp(m_96,m_97,m_98)) && inj-event(issuerSendsLastMessageToApp(m_99,m_100,m_101,m_102)) is false.

Query inj-event(browserCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToBrowser(m_100,m_101)) && inj-event(issuerSendsLastMessageToBrowser(m_96,m_97,m_98,m_99)) is true.

Query inj-event(issuerCompletesProtocol(m_96,m_97,m_98,m_99,m_100,m_101)) ==> inj-event(appSendsLastMessageToIssuer(m_99,m_100,m_101)) && inj-event(browserSendsLastMessageToIssuer(m_96,m_97,m_98)) is false.

--------------------------------------------------------------

